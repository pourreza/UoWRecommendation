<workflow xmlns="http://taverna.sf.net/2008/xml/t2flow" version="1" producedBy="taverna-2.1-beta-2"><dataflow id="a68f18ff-e190-45bb-a16e-19812276feec" role="top"><name>Workflow25</name><inputPorts><port><name>EXPID</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.ExampleValue">
        <text>95</text>
      </annotationBean>
      <date>2009-06-09 14:07:19.47 PDT</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>The experiment ID through which to query microArray data from caArray grid service.</text>
      </annotationBean>
      <date>2009-06-09 14:07:13.449 PDT</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port></inputPorts><outputPorts><port><name>Result_CSV</name></port></outputPorts><processors><processor><name>Extract_Microarray</name><inputPorts><port><name>EXPID</name><depth>0</depth></port></inputPorts><outputPorts><port><name>testClass</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>trainingClass</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>testData</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>trainingData</name><depth>1</depth><granularDepth>1</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>dataflow-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.dataflow.DataflowActivity</class><inputMap><map from="EXPID" to="EXPID" /></inputMap><outputMap><map from="trainingClass" to="trainingClass" /><map from="trainingData" to="trainingData" /><map from="testData" to="testData" /><map from="testClass" to="testClass" /></outputMap><configBean encoding="dataflow"><dataflow ref="f76427f1-0d79-4731-aa9f-1ee16de0946b" /></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="EXPID" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>Preprocess_Microarray</name><inputPorts><port><name>testData</name><depth>0</depth></port><port><name>trainingData</name><depth>0</depth></port></inputPorts><outputPorts><port><name>testData</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>trainingData</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>dataflow-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.dataflow.DataflowActivity</class><inputMap><map from="trainingData" to="trainingData" /><map from="testData" to="testData" /></inputMap><outputMap><map from="trainingData" to="trainingData" /><map from="testData" to="testData" /></outputMap><configBean encoding="dataflow"><dataflow ref="2f6b4244-30ba-489f-819e-590181d63bd1" /></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="testData" depth="0" /><port name="trainingData" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>Predict_Lymphoma_Type</name><inputPorts><port><name>trainingData</name><depth>0</depth></port><port><name>testData</name><depth>0</depth></port><port><name>trainingClass</name><depth>0</depth></port><port><name>testClass</name><depth>0</depth></port></inputPorts><outputPorts><port><name>Result_CSV</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>dataflow-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.dataflow.DataflowActivity</class><inputMap><map from="trainingClass" to="trainingClass" /><map from="trainingData" to="trainingData" /><map from="testData" to="testData" /><map from="testClass" to="testClass" /></inputMap><outputMap><map from="Result_CSV" to="Result_CSV" /></outputMap><configBean encoding="dataflow"><dataflow ref="079f19aa-786b-4059-9665-f83fbadee52e" /></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="trainingData" depth="0" /><port name="testData" depth="0" /><port name="trainingClass" depth="0" /><port name="testClass" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor></processors><conditions /><datalinks><datalink><sink type="processor"><processor>Extract_Microarray</processor><port>EXPID</port></sink><source type="dataflow"><port>EXPID</port></source></datalink><datalink><sink type="processor"><processor>Preprocess_Microarray</processor><port>testData</port></sink><source type="processor"><processor>Extract_Microarray</processor><port>testData</port></source></datalink><datalink><sink type="processor"><processor>Preprocess_Microarray</processor><port>trainingData</port></sink><source type="processor"><processor>Extract_Microarray</processor><port>trainingData</port></source></datalink><datalink><sink type="processor"><processor>Predict_Lymphoma_Type</processor><port>trainingData</port></sink><source type="processor"><processor>Preprocess_Microarray</processor><port>trainingData</port></source></datalink><datalink><sink type="processor"><processor>Predict_Lymphoma_Type</processor><port>testData</port></sink><source type="processor"><processor>Preprocess_Microarray</processor><port>testData</port></source></datalink><datalink><sink type="processor"><processor>Predict_Lymphoma_Type</processor><port>trainingClass</port></sink><source type="processor"><processor>Extract_Microarray</processor><port>trainingClass</port></source></datalink><datalink><sink type="processor"><processor>Predict_Lymphoma_Type</processor><port>testClass</port></sink><source type="processor"><processor>Extract_Microarray</processor><port>testClass</port></source></datalink><datalink><sink type="dataflow"><port>Result_CSV</port></sink><source type="processor"><processor>Predict_Lymphoma_Type</processor><port>Result_CSV</port></source></datalink></datalinks><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.Author">
        <text>Wei Tan</text>
      </annotationBean>
      <date>2009-06-09 14:05:23.833 PDT</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.DescriptiveTitle">
        <text> Lymphoma type prediction based on microarray data </text>
      </annotationBean>
      <date>2009-06-09 14:06:18.267 PDT</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
  <annotationAssertions>
    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">
        <text>Scientific value Using gene-expression patterns associated with DLBCL and FL to predict the lymphoma type of an unknown sample. Using SVM (Support Vector Machine) to classify data, and predicting the tumor types of unknown examples. Steps Querying training data from experiments stored in caArray. Preprocessing, or normalize the microarray data. Adding training and testing data into SVM service to get classification result. </text>
      </annotationBean>
      <date>2009-06-09 14:06:28.267 PDT</date>
      <creators />
      <curationEventList />
    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
  </annotationAssertions>
</net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></dataflow><dataflow id="f76427f1-0d79-4731-aa9f-1ee16de0946b" role="nested"><name>caArray</name><inputPorts><port><name>EXPID</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port></inputPorts><outputPorts><port><name>testClass</name></port><port><name>testData</name></port><port><name>trainingData</name></port><port><name>trainingClass</name></port></outputPorts><processors><processor><name>Beanshell_3</name><inputPorts><port><name>i</name><depth>0</depth></port></inputPorts><outputPorts><port><name>o</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>beanshell-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity</class><inputMap><map from="i" to="i" /></inputMap><outputMap><map from="o" to="o" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean xmlns="">
  <script>import java.io.File;
import java.util.ArrayList;
import java.util.List;
import java.io.IOException;
import java.io.StringReader;
import java.io.StringWriter;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathConstants;
import javax.xml.xpath.XPathExpressionException;
import javax.xml.xpath.XPathFactory;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

try{
DocumentBuilderFactory docBuilderFactory = DocumentBuilderFactory.newInstance();
		docBuilderFactory.setNamespaceAware(true);
        DocumentBuilder docBuilder;
docBuilder = docBuilderFactory.newDocumentBuilder();

   Document doc2 = docBuilder.parse( new InputSource(new StringReader(i)));
			    
				
				Element el = doc2.getDocumentElement();
			   
			XPath xpath = XPathFactory.newInstance().newXPath();
			
			String findDataSet = 
				"//*[local-name()='DataSet' and namespace-uri()='gme://caArray.caBIG/2.1/gov.nih.nci.caarray.domain.data']/@id";
			
			//String  DataSetId = (String) xpath.evaluate(findDataSet, el, XPathConstants.STRING);
			
		
			
				
			//String  DataSetId = (String) xpath.evaluate(findDataSet, el, XPathConstants.STRING);			
			//o = "&lt;ns1:CQLQuery xmlns:ns1=\"http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery\"&gt;&lt;ns1:Target name=\"gov.nih.nci.caarray.domain.data.DataSet\"&gt;&lt;ns1:Group logicRelation=\"AND\"&gt;&lt;ns1:Attribute name=\"id\" predicate=\"EQUAL_TO\" value=\""+ DataSetId + "\"/&gt;&lt;/ns1:Group&gt;&lt;/ns1:Target&gt;&lt;/ns1:CQLQuery&gt;";
			NodeList  nodes = (NodeList) xpath.evaluate(findDataSet, el, XPathConstants.NODESET);
			
			
			
			StringBuffer cql = new StringBuffer("&lt;ns1:CQLQuery xmlns:ns1=\"http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery\"&gt;&lt;ns1:Target name=\"gov.nih.nci.caarray.domain.data.DataSet\"&gt;&lt;ns1:Group logicRelation=\"OR\"&gt;");			
//String  DataSetId = (String) xpath.evaluate(findDataSet, el, XPathConstants.STRING);	
			NodeList  DataSetIdNodes = (NodeList) xpath.evaluate(findDataSet, el, XPathConstants.NODESET);
			for (int i=0;i&lt;DataSetIdNodes.getLength();i++){
				Node n = nodes.item(i);				
				cql.append("&lt;ns1:Attribute name=\"id\" predicate=\"EQUAL_TO\" value=\""+ n.getTextContent() + "\"/&gt;");
			}
			cql.append("&lt;/ns1:Group&gt;&lt;/ns1:Target&gt;&lt;/ns1:CQLQuery&gt;");
			o = cql.toString();
			
				
		} catch (ParserConfigurationException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (SAXException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (XPathExpressionException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}</script>
  <dependencies />
  <classLoaderSharing>workflow</classLoaderSharing>
  <localDependencies />
  <artifactDependencies />
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>i</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/plain'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>o</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/plain'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="i" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>Beanshell_2</name><inputPorts><port><name>i</name><depth>0</depth></port></inputPorts><outputPorts><port><name>o</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>beanshell-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity</class><inputMap><map from="i" to="i" /></inputMap><outputMap><map from="o" to="o" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean xmlns="">
  <script>import java.io.File;
import java.util.ArrayList;
import java.util.List;
import java.io.IOException;
import java.io.StringReader;
import java.io.StringWriter;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathConstants;
import javax.xml.xpath.XPathExpressionException;
import javax.xml.xpath.XPathFactory;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

System.out.println("in beanshell_2");
try{
DocumentBuilderFactory docBuilderFactory = DocumentBuilderFactory.newInstance();
		docBuilderFactory.setNamespaceAware(true);
        DocumentBuilder docBuilder;
docBuilder = docBuilderFactory.newDocumentBuilder();
   Document doc2 = docBuilder.parse( new InputSource(new StringReader(i)));
				Element el = doc2.getDocumentElement();
			XPath xpath = XPathFactory.newInstance().newXPath();
		
			String findDerivedArrayData = 
				"//*[local-name()='DerivedArrayData' and namespace-uri()='gme://caArray.caBIG/2.1/gov.nih.nci.caarray.domain.data'][contains(@name,'.CHP')]/@id";
			String findClass = 
				"//*[local-name()='FactorValue' and namespace-uri()='gme://caArray.caBIG/2.1/gov.nih.nci.caarray.domain.project']/@value";
			
			//String  DerivedArrayDataId = (String) xpath.evaluate(findDerivedArrayData, el, XPathConstants.STRING);
			//String  DerivedClass = (String) xpath.evaluate(findClass, el, XPathConstants.STRING);
					
			NodeList  DerivedArrayDataIdNodes = (NodeList) xpath.evaluate(findDerivedArrayData, el, XPathConstants.NODESET);
			NodeList  DerivedClassNodes = (NodeList) xpath.evaluate(findClass, el, XPathConstants.NODESET);
			System.out.println(DerivedArrayDataIdNodes.getLength());
			System.out.println(DerivedClassNodes.getLength());	
			
			StringBuffer cql = new StringBuffer("&lt;ns1:CQLQuery xmlns:ns1=\"http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery\"&gt;&lt;ns1:Target name=\"gov.nih.nci.caarray.domain.data.DerivedArrayData\"&gt;&lt;ns1:Group logicRelation=\"OR\"&gt;");
			//o = "&lt;ns1:CQLQuery xmlns:ns1=\"http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery\"&gt;&lt;ns1:Target name=\"gov.nih.nci.caarray.domain.data.DerivedArrayData\"&gt;&lt;ns1:Group logicRelation=\"AND\"&gt;&lt;ns1:Attribute name=\"id\" predicate=\"EQUAL_TO\" value=\""+ DerivedArrayDataId + "\"/&gt;&lt;/ns1:Group&gt;&lt;/ns1:Target&gt;&lt;/ns1:CQLQuery&gt;";
			for (int i=0;i&lt;DerivedArrayDataIdNodes.getLength();i++){
				Node n = DerivedArrayDataIdNodes.item(i);
				System.out.println(n.getTextContent());
				
				cql.append("&lt;ns1:Attribute name=\"id\" predicate=\"EQUAL_TO\" value=\""+ n.getTextContent() + "\"/&gt;");
				
			}
			cql.append("&lt;/ns1:Group&gt;&lt;/ns1:Target&gt;&lt;/ns1:CQLQuery&gt;");
			//type = DerivedClass;
			o = cql.toString();
			System.out.println(o);
		} catch (ParserConfigurationException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (SAXException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (XPathExpressionException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}</script>
  <dependencies />
  <classLoaderSharing>workflow</classLoaderSharing>
  <localDependencies />
  <artifactDependencies />
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>i</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/plain'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>o</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/plain'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>type</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/plain'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="i" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>Beanshell</name><inputPorts><port><name>i</name><depth>0</depth></port></inputPorts><outputPorts><port><name>o</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>beanshell-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity</class><inputMap><map from="i" to="i" /></inputMap><outputMap><map from="o" to="o" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean xmlns="">
  <script>import java.io.File;
import java.util.ArrayList;
import java.util.List;
import java.io.IOException;
import java.io.StringReader;
import java.io.StringWriter;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathConstants;
import javax.xml.xpath.XPathExpressionException;
import javax.xml.xpath.XPathFactory;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

try{
DocumentBuilderFactory docBuilderFactory = DocumentBuilderFactory.newInstance();
		docBuilderFactory.setNamespaceAware(true);
        DocumentBuilder docBuilder;
docBuilder = docBuilderFactory.newDocumentBuilder();

   Document doc2 = docBuilder.parse( new InputSource(new StringReader(i)));
			    
				
				Element el = doc2.getDocumentElement();
			   
			XPath xpath = XPathFactory.newInstance().newXPath();
			
			String findHybridizationExpression = 
			"//*[local-name()='Hybridization' and namespace-uri()='gme://caArray.caBIG/2.1/gov.nih.nci.caarray.domain.hybridization']/@id";
			
			NodeList  nodes = (NodeList) xpath.evaluate(findHybridizationExpression, el, XPathConstants.NODESET);
			System.out.println(nodes.getLength());
			//ArrayList&lt;String&gt; o2 = new ArrayList&lt;String&gt;();
			//o = new ArrayList();
			StringBuffer cql = new StringBuffer("&lt;ns1:CQLQuery xmlns:ns1=\"http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery\"&gt;&lt;ns1:Target name=\"gov.nih.nci.caarray.domain.hybridization.Hybridization\"&gt;&lt;ns1:Group logicRelation=\"OR\"&gt;");
			for (int i=0;i&lt;nodes.getLength();i++){
				Node n = nodes.item(i);
				System.out.println(n.getTextContent());
				//o2.add(n.getTextContent());
				//only use 6 hybridizations for testing
				cql.append("&lt;ns1:Attribute name=\"id\" predicate=\"EQUAL_TO\" value=\""+ n.getTextContent() + "\"/&gt;");

				//if(i&lt;17){
				//o.add(n.getTextContent());
				//}
				
				
			}
			cql.append("&lt;/ns1:Group&gt;&lt;/ns1:Target&gt;&lt;/ns1:CQLQuery&gt;");
			o = cql.toString();
			
				
		} catch (ParserConfigurationException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (SAXException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (XPathExpressionException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}</script>
  <dependencies />
  <classLoaderSharing>workflow</classLoaderSharing>
  <localDependencies />
  <artifactDependencies />
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>i</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/plain'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>o</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/plain'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="i" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>parametersXML4</name><inputPorts><port><name>cqlQuery</name><depth>0</depth></port></inputPorts><outputPorts><port><name>output</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLInputSplitterActivity</class><inputMap><map from="cqlQuery" to="cqlQuery" /></inputMap><outputMap><map from="output" to="output" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="QueryRequest" name="parameters" qname="{http://gov.nih.nci.cagrid.data/DataService}QueryRequest"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="&amp;gt;&amp;gt;QueryRequest&amp;gt;cqlQuery" name="cqlQuery" qname="{http://gov.nih.nci.cagrid.data/DataService}&amp;gt;QueryRequest&amp;gt;cqlQuery"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="CQLQuery" name="CQLQuery" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}&amp;gt;&amp;gt;QueryRequest&amp;gt;cqlQuery&amp;gt;CQLQuery"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="Object" name="Target" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}&amp;gt;CQLQuery&amp;gt;Target"&gt;&lt;s:elements&gt;&lt;s:complextype optional="true" unbounded="false" typename="Attribute" name="Attribute" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Attribute"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="true" unbounded="false" typename="Association" name="Association" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Association"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="true" unbounded="false" typename="Group" name="Group" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Group"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Association" name="Association" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Association"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Association" optional="false" unbounded="false" typename="Association" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Attribute" name="Attribute" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Attribute"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Attribute" optional="false" unbounded="false" typename="Attribute" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Group" name="Group" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Group"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="Group" name="" qname="Group"&gt;&lt;s:elements&gt;&lt;s:arraytype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Association" optional="true" unbounded="true" wrapped="false" typename="Association" name="Association" /&gt;&lt;s:arraytype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Attribute" optional="true" unbounded="true" wrapped="false" typename="Attribute" name="Attribute" /&gt;&lt;s:arraytype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Group" optional="true" unbounded="true" wrapped="false" typename="Group" name="Group" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="true" unbounded="false" typename="QueryModifier" name="QueryModifier" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}&amp;gt;CQLQuery&amp;gt;QueryModifier"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="string" name="AttributeNames" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}QueryModifier&amp;gt;AttributeNames"&gt;&lt;s:elementtype&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="" qname="{http://www.w3.org/2001/XMLSchema}string" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:basetype optional="true" unbounded="false" typename="string" name="DistinctAttribute" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}QueryModifier&amp;gt;DistinctAttribute" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>cqlQuery</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>output</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="cqlQuery" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>cqlQueryXML2</name><inputPorts><port><name>CQLQuery</name><depth>0</depth></port></inputPorts><outputPorts><port><name>output</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLInputSplitterActivity</class><inputMap><map from="CQLQuery" to="CQLQuery" /></inputMap><outputMap><map from="output" to="output" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="&amp;gt;&amp;gt;QueryRequest&amp;gt;cqlQuery" name="cqlQuery" qname="{http://gov.nih.nci.cagrid.data/DataService}&amp;gt;QueryRequest&amp;gt;cqlQuery"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="CQLQuery" name="CQLQuery" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}&amp;gt;&amp;gt;QueryRequest&amp;gt;cqlQuery&amp;gt;CQLQuery"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="Object" name="Target" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}&amp;gt;CQLQuery&amp;gt;Target"&gt;&lt;s:elements&gt;&lt;s:complextype optional="true" unbounded="false" typename="Attribute" name="Attribute" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Attribute"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="true" unbounded="false" typename="Association" name="Association" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Association"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="true" unbounded="false" typename="Group" name="Group" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Group"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Association" name="Association" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Association"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Association" optional="false" unbounded="false" typename="Association" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Attribute" name="Attribute" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Attribute"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Attribute" optional="false" unbounded="false" typename="Attribute" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Group" name="Group" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Group"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="Group" name="" qname="Group"&gt;&lt;s:elements&gt;&lt;s:arraytype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Association" optional="true" unbounded="true" wrapped="false" typename="Association" name="Association" /&gt;&lt;s:arraytype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Attribute" optional="true" unbounded="true" wrapped="false" typename="Attribute" name="Attribute" /&gt;&lt;s:arraytype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Group" optional="true" unbounded="true" wrapped="false" typename="Group" name="Group" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="true" unbounded="false" typename="QueryModifier" name="QueryModifier" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}&amp;gt;CQLQuery&amp;gt;QueryModifier"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="string" name="AttributeNames" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}QueryModifier&amp;gt;AttributeNames"&gt;&lt;s:elementtype&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="" qname="{http://www.w3.org/2001/XMLSchema}string" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:basetype optional="true" unbounded="false" typename="string" name="DistinctAttribute" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}QueryModifier&amp;gt;DistinctAttribute" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>CQLQuery</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>output</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="CQLQuery" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>Beanshell_4</name><inputPorts><port><name>i</name><depth>0</depth></port></inputPorts><outputPorts><port><name>o</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>beanshell-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity</class><inputMap><map from="i" to="i" /></inputMap><outputMap><map from="o" to="o" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean xmlns="">
  <script>import java.io.File;
import java.util.ArrayList;
import java.util.List;
import java.io.IOException;
import java.io.StringReader;
import java.io.StringWriter;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathConstants;
import javax.xml.xpath.XPathExpressionException;
import javax.xml.xpath.XPathFactory;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

try{
DocumentBuilderFactory docBuilderFactory = DocumentBuilderFactory.newInstance();
		docBuilderFactory.setNamespaceAware(true);
        DocumentBuilder docBuilder;
docBuilder = docBuilderFactory.newDocumentBuilder();

   Document doc2 = docBuilder.parse( new InputSource(new StringReader(i)));
			    
				
				Element el = doc2.getDocumentElement();
			   
			XPath xpath = XPathFactory.newInstance().newXPath();
			
			String findHybridizationData =
				"//*[local-name()='HybridizationData' and namespace-uri()='gme://caArray.caBIG/2.1/gov.nih.nci.caarray.domain.data']/@id";
				
			
			//String  HybridizationDataId = (String) xpath.evaluate(findHybridizationData, el, XPathConstants.STRING);
			
			StringBuffer cql = new StringBuffer("&lt;ns1:CQLQuery xmlns:ns1=\"http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery\"&gt;&lt;ns1:Target name=\"gov.nih.nci.caarray.domain.data.HybridizationData\"&gt;&lt;ns1:Group logicRelation=\"OR\"&gt;");
			
			NodeList  HybridizationDataIdNodes = (NodeList) xpath.evaluate(findHybridizationData, el, XPathConstants.NODESET);
			for (int i=0;i&lt;HybridizationDataIdNodes.getLength();i++){
				Node n = HybridizationDataIdNodes.item(i);				
				cql.append("&lt;ns1:Attribute name=\"id\" predicate=\"EQUAL_TO\" value=\""+ n.getTextContent() + "\"/&gt;");
			}
			cql.append("&lt;/ns1:Group&gt;&lt;/ns1:Target&gt;&lt;/ns1:CQLQuery&gt;");
			o = cql.toString();		
			//o = "&lt;ns1:CQLQuery xmlns:ns1=\"http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery\"&gt;&lt;ns1:Target name=\"gov.nih.nci.caarray.domain.data.HybridizationData\"&gt;&lt;ns1:Group logicRelation=\"AND\"&gt;&lt;ns1:Attribute name=\"id\" predicate=\"EQUAL_TO\" value=\""+ HybridizationDataId + "\"/&gt;&lt;/ns1:Group&gt;&lt;/ns1:Target&gt;&lt;/ns1:CQLQuery&gt;";
			
			
				
		} catch (ParserConfigurationException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (SAXException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (XPathExpressionException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}</script>
  <dependencies />
  <classLoaderSharing>workflow</classLoaderSharing>
  <localDependencies />
  <artifactDependencies />
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>i</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/plain'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>o</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/plain'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="i" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>cqlQueryXML1</name><inputPorts><port><name>CQLQuery</name><depth>0</depth></port></inputPorts><outputPorts><port><name>output</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLInputSplitterActivity</class><inputMap><map from="CQLQuery" to="CQLQuery" /></inputMap><outputMap><map from="output" to="output" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="&amp;gt;&amp;gt;QueryRequest&amp;gt;cqlQuery" name="cqlQuery" qname="{http://gov.nih.nci.cagrid.data/DataService}&amp;gt;QueryRequest&amp;gt;cqlQuery"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="CQLQuery" name="CQLQuery" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}&amp;gt;&amp;gt;QueryRequest&amp;gt;cqlQuery&amp;gt;CQLQuery"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="Object" name="Target" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}&amp;gt;CQLQuery&amp;gt;Target"&gt;&lt;s:elements&gt;&lt;s:complextype optional="true" unbounded="false" typename="Attribute" name="Attribute" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Attribute"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="true" unbounded="false" typename="Association" name="Association" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Association"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="true" unbounded="false" typename="Group" name="Group" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Group"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Association" name="Association" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Association"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Association" optional="false" unbounded="false" typename="Association" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Attribute" name="Attribute" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Attribute"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Attribute" optional="false" unbounded="false" typename="Attribute" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Group" name="Group" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Group"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="Group" name="" qname="Group"&gt;&lt;s:elements&gt;&lt;s:arraytype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Association" optional="true" unbounded="true" wrapped="false" typename="Association" name="Association" /&gt;&lt;s:arraytype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Attribute" optional="true" unbounded="true" wrapped="false" typename="Attribute" name="Attribute" /&gt;&lt;s:arraytype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Group" optional="true" unbounded="true" wrapped="false" typename="Group" name="Group" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="true" unbounded="false" typename="QueryModifier" name="QueryModifier" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}&amp;gt;CQLQuery&amp;gt;QueryModifier"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="string" name="AttributeNames" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}QueryModifier&amp;gt;AttributeNames"&gt;&lt;s:elementtype&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="" qname="{http://www.w3.org/2001/XMLSchema}string" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:basetype optional="true" unbounded="false" typename="string" name="DistinctAttribute" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}QueryModifier&amp;gt;DistinctAttribute" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>CQLQuery</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>output</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="CQLQuery" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>cqlQueryXML4</name><inputPorts><port><name>CQLQuery</name><depth>0</depth></port></inputPorts><outputPorts><port><name>output</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLInputSplitterActivity</class><inputMap><map from="CQLQuery" to="CQLQuery" /></inputMap><outputMap><map from="output" to="output" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="&amp;gt;&amp;gt;QueryRequest&amp;gt;cqlQuery" name="cqlQuery" qname="{http://gov.nih.nci.cagrid.data/DataService}&amp;gt;QueryRequest&amp;gt;cqlQuery"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="CQLQuery" name="CQLQuery" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}&amp;gt;&amp;gt;QueryRequest&amp;gt;cqlQuery&amp;gt;CQLQuery"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="Object" name="Target" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}&amp;gt;CQLQuery&amp;gt;Target"&gt;&lt;s:elements&gt;&lt;s:complextype optional="true" unbounded="false" typename="Attribute" name="Attribute" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Attribute"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="true" unbounded="false" typename="Association" name="Association" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Association"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="true" unbounded="false" typename="Group" name="Group" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Group"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Association" name="Association" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Association"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Association" optional="false" unbounded="false" typename="Association" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Attribute" name="Attribute" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Attribute"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Attribute" optional="false" unbounded="false" typename="Attribute" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Group" name="Group" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Group"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="Group" name="" qname="Group"&gt;&lt;s:elements&gt;&lt;s:arraytype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Association" optional="true" unbounded="true" wrapped="false" typename="Association" name="Association" /&gt;&lt;s:arraytype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Attribute" optional="true" unbounded="true" wrapped="false" typename="Attribute" name="Attribute" /&gt;&lt;s:arraytype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Group" optional="true" unbounded="true" wrapped="false" typename="Group" name="Group" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="true" unbounded="false" typename="QueryModifier" name="QueryModifier" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}&amp;gt;CQLQuery&amp;gt;QueryModifier"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="string" name="AttributeNames" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}QueryModifier&amp;gt;AttributeNames"&gt;&lt;s:elementtype&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="" qname="{http://www.w3.org/2001/XMLSchema}string" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:basetype optional="true" unbounded="false" typename="string" name="DistinctAttribute" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}QueryModifier&amp;gt;DistinctAttribute" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>CQLQuery</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>output</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="CQLQuery" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>parametersXML6</name><inputPorts><port><name>cqlQuery</name><depth>0</depth></port></inputPorts><outputPorts><port><name>output</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLInputSplitterActivity</class><inputMap><map from="cqlQuery" to="cqlQuery" /></inputMap><outputMap><map from="output" to="output" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="QueryRequest" name="parameters" qname="{http://gov.nih.nci.cagrid.data/DataService}QueryRequest"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="&amp;gt;&amp;gt;QueryRequest&amp;gt;cqlQuery" name="cqlQuery" qname="{http://gov.nih.nci.cagrid.data/DataService}&amp;gt;QueryRequest&amp;gt;cqlQuery"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="CQLQuery" name="CQLQuery" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}&amp;gt;&amp;gt;QueryRequest&amp;gt;cqlQuery&amp;gt;CQLQuery"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="Object" name="Target" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}&amp;gt;CQLQuery&amp;gt;Target"&gt;&lt;s:elements&gt;&lt;s:complextype optional="true" unbounded="false" typename="Attribute" name="Attribute" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Attribute"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="true" unbounded="false" typename="Association" name="Association" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Association"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="true" unbounded="false" typename="Group" name="Group" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Group"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Association" name="Association" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Association"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Association" optional="false" unbounded="false" typename="Association" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Attribute" name="Attribute" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Attribute"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Attribute" optional="false" unbounded="false" typename="Attribute" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Group" name="Group" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Group"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="Group" name="" qname="Group"&gt;&lt;s:elements&gt;&lt;s:arraytype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Association" optional="true" unbounded="true" wrapped="false" typename="Association" name="Association" /&gt;&lt;s:arraytype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Attribute" optional="true" unbounded="true" wrapped="false" typename="Attribute" name="Attribute" /&gt;&lt;s:arraytype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Group" optional="true" unbounded="true" wrapped="false" typename="Group" name="Group" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="true" unbounded="false" typename="QueryModifier" name="QueryModifier" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}&amp;gt;CQLQuery&amp;gt;QueryModifier"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="string" name="AttributeNames" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}QueryModifier&amp;gt;AttributeNames"&gt;&lt;s:elementtype&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="" qname="{http://www.w3.org/2001/XMLSchema}string" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:basetype optional="true" unbounded="false" typename="string" name="DistinctAttribute" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}QueryModifier&amp;gt;DistinctAttribute" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>cqlQuery</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>output</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="cqlQuery" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>Beanshell_6</name><inputPorts><port><name>i</name><depth>0</depth></port><port><name>hybridizationString</name><depth>0</depth></port></inputPorts><outputPorts><port><name>testClass</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>testDataString</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>trainingDataString</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>trainingClass</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>beanshell-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity</class><inputMap><map from="i" to="i" /><map from="hybridizationString" to="hybridizationString" /></inputMap><outputMap><map from="testDataString" to="testDataString" /><map from="trainingClass" to="trainingClass" /><map from="trainingDataString" to="trainingDataString" /><map from="testClass" to="testClass" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean xmlns="">
  <script>import java.io.*;
import java.util.ArrayList;
import java.util.List;
import java.util.zip.GZIPInputStream;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathConstants;
import javax.xml.xpath.XPathExpressionException;
import javax.xml.xpath.XPathFactory;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;
import java.util.zip.GZIPInputStream;


public  int getRowSize(String gctLineString){		
		int columnSize = 0;
		for(int i=0;i&lt;gctLineString.length();i++){
			if(gctLineString.charAt(i)=='\t'){
				columnSize++;				
			}			
		}		
		return columnSize-1;
	}
	public  double [] getRowArray(String gctLineString){	
		//trim the last "\t" if exists
		if(gctLineString.charAt(gctLineString.length()-1)=='\t'){
			gctLineString = gctLineString.substring(0, gctLineString.length()-1);
		}
		int columnSize = 0;
		for(int i=0;i&lt;gctLineString.length();i++){
			if(gctLineString.charAt(i)=='\t'){
				columnSize++;				
			}			
		}	
		columnSize--;
		String[] array = gctLineString.split("\\t");
		double [] columnArray = new double[columnSize];
		for(int i=0;i&lt;columnSize;i++){
			columnArray[i] = Double.valueOf(array[i+2]);
			
		}
		return columnArray;
	}
	
    public  byte[] doubleArrayToBytes(double [][] doubles)
    {
        if(null == doubles || 0 == doubles.length)
            return null;
        int numRows = doubles.length;
        int numColumns = doubles[0].length;
        ByteArrayOutputStream bos = new ByteArrayOutputStream();
        DataOutputStream dos = new DataOutputStream(bos);
        try
        {
            for(int i = 0; i &lt; numRows; i++)
            {
                for(int j = 0; j &lt; numColumns; j++)
                    dos.writeDouble(doubles[i][j]);

            }

        }
        catch(IOException e)
        {
            e.printStackTrace(System.err);
            throw new RuntimeException((new StringBuilder()).append("Error converting double array to byte array: ").append(e).toString());
        }
        return bos.toByteArray();
    }




ArrayList o = new ArrayList();
ArrayList classMembership = new ArrayList();
int sampleLength = 0;
int sampleNo = 0;
System.out.println("in beanshell_6");
try{

		DocumentBuilderFactory docBuilderFactory = DocumentBuilderFactory.newInstance();
		docBuilderFactory.setNamespaceAware(true);
	        DocumentBuilder docBuilder;
		docBuilder = docBuilderFactory.newDocumentBuilder();


//parse class membership data
			Document doc1 = docBuilder.parse( new InputSource(new StringReader(hybridizationString)));
			Element hybridizationEl = doc1.getDocumentElement();   
			XPath xpath1 = XPathFactory.newInstance().newXPath();
			String findHybridizationId = 
				"//*[local-name()='Hybridization' and namespace-uri()='gme://caArray.caBIG/2.1/gov.nih.nci.caarray.domain.hybridization']/@id";
			String findClass = 
				"//*[local-name()='FactorValue' and namespace-uri()='gme://caArray.caBIG/2.1/gov.nih.nci.caarray.domain.project']/@value";
			NodeList  hybridizationIdNodes = (NodeList) xpath1.evaluate(findHybridizationId, hybridizationEl, XPathConstants.NODESET);
			NodeList  classNodes = (NodeList) xpath1.evaluate(findClass, hybridizationEl, XPathConstants.NODESET);
			HashMap classMap = new HashMap();
			for (int i=0;i&lt;hybridizationIdNodes.getLength();i++){	
				System.out.println(hybridizationIdNodes.item(i).getTextContent() + "   " + classNodes.item(i).getTextContent());
				classMap.put(hybridizationIdNodes.item(i).getTextContent(), classNodes.item(i).getTextContent());
			}

//parse data column
	
			
				Document doc2 = docBuilder.parse( new InputSource(new StringReader(i)));					
				Element el = doc2.getDocumentElement();   
				XPath xpath = XPathFactory.newInstance().newXPath();
				String findDataColumn = 
					"//*[local-name()='AbstractDataColumn' and namespace-uri()='gme://caArray.caBIG/2.1/gov.nih.nci.caarray.domain.data']/@values";
				String findHybridizationIdFromArray = 
				"//*[local-name()='Hybridization' and namespace-uri()='gme://caArray.caBIG/2.1/gov.nih.nci.caarray.domain.hybridization']/@id";
				NodeList  hybridizationIdFromArrayNodes = (NodeList) xpath.evaluate(findHybridizationIdFromArray, el, XPathConstants.NODESET);
				NodeList  DataColumnBase64ValueNodes = (NodeList) xpath.evaluate(findDataColumn, el, XPathConstants.NODESET);
			
		//int arrayDataLoc = 4;
		//should be a float column
		for (int i=0;i&lt;DataColumnBase64ValueNodes.getLength();i++){
				
			if((i-4)%11==0){	
				classMembership.add(classMap.get(hybridizationIdFromArrayNodes.item(sampleNo).getTextContent()));
				
				System.out.println("--sample-- " + sampleNo + "    " + hybridizationIdFromArrayNodes.item(sampleNo).getTextContent() + 
				"   "+ classMap.get(hybridizationIdFromArrayNodes.item(sampleNo).getTextContent()) );	
				sampleNo++; //move to the next sample	
				String DataColumnBase64Value = new String();			   		
				DataColumnBase64Value = DataColumnBase64ValueNodes.item(i).getTextContent();
				sun.misc.BASE64Decoder base64Decoder = new sun.misc.BASE64Decoder();
				try {
					byte[] bytes = base64Decoder.decodeBuffer(DataColumnBase64Value);
					ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(bytes);
					GZIPInputStream gzipInputStream;
					gzipInputStream = new java.util.zip.GZIPInputStream(byteArrayInputStream);
					ObjectInputStream objectInputStream = new ObjectInputStream(gzipInputStream);
					Serializable dataColumnValues = (Serializable) objectInputStream.readObject();				
					float[] a = (float []) dataColumnValues;
					for(int k=0;k&lt;a.length;k++){
						o.add(a[k]);
						
					}
					sampleLength = a.length;					
					} catch (IOException e1) {
						// TODO Auto-generated catch block
						e1.printStackTrace();
					} catch (ClassNotFoundException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				
			}			
		}						
			} catch (ParserConfigurationException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (SAXException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (XPathExpressionException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}


///////////////////////////////////////////////////////////////////////////////////////////////////////

	


//split the data columns into two and inverse the data column matrix
		
		 //TODO get length and no through metadata
		System.out.println("sampleLength: " + sampleLength);
		System.out.println("sampleNo: " + sampleNo);
		Float [] intExperimentDataColumn = new Float[o.size()];
		o.toArray(intExperimentDataColumn);
		//suppose sampleNo is an odd number: 77 in this case
		int [][]  trainingData;
		int [][]  testingData;
		if(sampleNo%2==1){
			trainingData = new int[sampleLength][sampleNo/2+1];
			testingData= new int[sampleLength][sampleNo/2];
		}
		else{
			trainingData = new int[sampleLength][sampleNo/2];
			testingData= new int[sampleLength][sampleNo/2];
		}
		for(int i=0;i&lt;sampleNo;i++){
			for(int j=0;j&lt;sampleLength;j++){
				if(i%2==0){//test data set
					trainingData[j][i/2] =  Float.valueOf(intExperimentDataColumn[i*sampleLength+j]).intValue();	
				}
				else{//training data set
					testingData[j][i/2] =  Float.valueOf(intExperimentDataColumn[i*sampleLength+j]).intValue();	
				}	
			}
		}
		
	/*	
		//write experimentDataColumn[][] into two files
		StringBuffer trainingDataSb = new StringBuffer();
		StringBuffer testingDataSb = new StringBuffer();
		trainingDataSb.append("#1.2\n");
		testingDataSb.append("#1.2\n");
		testingDataSb.append(sampleLength + "\t" + (sampleNo/2+1) + "\n");
		trainingDataSb.append(sampleLength + "\t" + sampleNo/2 + "\n");
		trainingDataSb.append("Name\tDescription\t");
		testingDataSb.append("Name\tDescription\t");
		for(int k=0;k&lt;sampleNo/2+1;k++){
			testingDataSb.append("EXP_"+k+"\t");		
		}
		testingDataSb.append("\n");
		for(int k=0;k&lt;sampleNo/2;k++){
			trainingDataSb.append("EXP_"+k+"\t");		
		}
		trainingDataSb.append("\n");
		for(int i=0;i&lt;sampleLength;i++){
			testingDataSb.append("Prob_"+i+"\t"+"Prob_"+i+"\t");
			trainingDataSb.append("Prob_"+i+"\t"+"Prob_"+i+"\t");
			for(int j=0;j&lt;sampleNo/2+1;j++){
				testingDataSb.append(testingData[i][j]+"\t");
				}
			testingDataSb.append("\n");
			for(int j=0;j&lt;sampleNo/2;j++){
				trainingDataSb.append(trainingData[i][j]+"\t");
				}
			trainingDataSb.append("\n");
			}
		String dir = System.getProperty("user.home");
		dir = dir +"/work/SVM/";
		File trainingFile = new File(dir+"/train.gct");
		File testingFile = new File(dir+"/test.gct");
		try {
			//use buffering
		    Writer trainingFileOutput = new BufferedWriter(new FileWriter(trainingFile));
		    Writer testingFileOutput = new BufferedWriter(new FileWriter(testingFile));
		    try {
		      //FileWriter always assumes default encoding is OK!
		    	trainingFileOutput.write(new String(trainingDataSb));
		    	testingFileOutput.write(new String(testingDataSb));
		    }
		    finally {
		    	trainingFileOutput.close();
		    	testingFileOutput.close();
		    }

		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		*/


/////////////////////////////////prepare data for SVM

		//read a double (int?) [][] from .gct file
		//concert [][] into byte []
		//base64 encode
		//
		double [][] trainingMicroArrayData  = new double[trainingData.length][];
		double [][] testMicroArrayData  = new double[testingData.length][];
		
		for(int i=0;i&lt;trainingData.length;i++){
			trainingMicroArrayData[i] = new double[trainingData[i].length];
			for(int j=0;j&lt;trainingData[i].length;j++){
				trainingMicroArrayData[i][j] = (double)trainingData[i][j];			
			}
		}
		for(int i=0;i&lt;testingData.length;i++){
			testMicroArrayData[i] = new double[testingData[i].length];
			for(int j=0;j&lt;testingData[i].length;j++){
				testMicroArrayData[i][j] = (double)testingData[i][j];			
			}
		}

		int []   trainingType; 
		if(sampleNo%2==1){
	   	trainingType = new int[sampleNo/2+1];
		}
		else {
		trainingType = new int[sampleNo/2];
		}
		int []   testType =new int[sampleNo/2];
		String type0 = (String)classMembership.get(0);
		for(int k=0;k&lt;classMembership.size();k++){
			
			String type = (String)classMembership.get(k);
				if(k%2==0){
					trainingType[k/2] = type.equals(type0)?0:1;
				}
				else {
					testType[k/2] = type.equals(type0)?0:1;
				}
			}
		
	    byte [] trainingMicroArrayByte = doubleArrayToBytes(trainingMicroArrayData);
	    byte [] testMicroArrayByte = doubleArrayToBytes(testMicroArrayData);
	    sun.misc.BASE64Encoder base64Encoder = new sun.misc.BASE64Encoder();
	    String trainingMicroArrayBase64String = base64Encoder.encode(trainingMicroArrayByte);
	    String testMicroArrayBase64String = base64Encoder.encode(testMicroArrayByte);
	    //System.out.println(microArrayBase64String);
	    
	    //construct classmembership elements
	    //training
	    StringBuffer trainingClassMembershipXMLString = new StringBuffer ("&lt;ns1:ClassMembership xmlns:ns1=\"gme://GenePattern.caBIG/1/gridExtensions\"&gt;");
	    trainingClassMembershipXMLString.append("&lt;classNames xmlns=\"\"&gt;DLBCL&lt;/classNames&gt;&lt;classNames xmlns=\"\"&gt;FL&lt;/classNames&gt;");
	    trainingClassMembershipXMLString.append("&lt;numSamples xmlns=\"\"&gt;"+trainingType.length+"&lt;/numSamples&gt;");
	    for(int i=0;i&lt;trainingType.length;i++){
	    	trainingClassMembershipXMLString.append("&lt;sampleClasses xmlns=\"\"&gt;"+trainingType[i]+"&lt;/sampleClasses&gt;");
	    }
	    for(int i=0;i&lt;trainingType.length;i++){
	    	trainingClassMembershipXMLString.append("&lt;sampleNames xmlns=\"\"&gt;trainingSample_"+i+"&lt;/sampleNames&gt;");
	    }
	    trainingClassMembershipXMLString.append("&lt;/ns1:ClassMembership&gt;");
	    //System.out.println(trainingClassMembershipXMLString);
	    //test
	    StringBuffer testClassMembershipXMLString = new StringBuffer ("&lt;ns1:ClassMembership xmlns:ns1=\"gme://GenePattern.caBIG/1/gridExtensions\"&gt;");
	    testClassMembershipXMLString.append("&lt;classNames xmlns=\"\"&gt;DLBCL&lt;/classNames&gt;&lt;classNames xmlns=\"\"&gt;FL&lt;/classNames&gt;");
	    testClassMembershipXMLString.append("&lt;numSamples xmlns=\"\"&gt;"+testType.length+"&lt;/numSamples&gt;");
	    for(int i=0;i&lt;testType.length;i++){
	    	testClassMembershipXMLString.append("&lt;sampleClasses xmlns=\"\"&gt;"+testType[i]+"&lt;/sampleClasses&gt;");
	    }
	    for(int i=0;i&lt;testType.length;i++){
	    	testClassMembershipXMLString.append("&lt;sampleNames xmlns=\"\"&gt;testSample_"+i+"&lt;/sampleNames&gt;");
	    }
	    testClassMembershipXMLString.append("&lt;/ns1:ClassMembership&gt;");
	    //System.out.println(testClassMembershipXMLString);
	    
	     //construct Data elements
	    //training data-----------------------------------------------------------------
	    StringBuffer trainingDataXMLString = new StringBuffer ("&lt;ns3:Data xmlns:ns3=\"gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml\"" +
	    		" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"&gt;");
	   //&lt;data&gt; contains four &lt;list&gt;:
	    // 1 add the base64value
	    trainingDataXMLString.append("&lt;ns3:list&gt;&lt;ns3:name&gt;data&lt;/ns3:name&gt;&lt;ns3:type xsi:nil=\"true\"/&gt;&lt;ns3:length xsi:nil=\"true\"/&gt;&lt;ns3:array&gt;&lt;ns3:dimensions&gt;"
	    		+trainingMicroArrayData.length+","+trainingMicroArrayData[0].length+
	    		"&lt;/ns3:dimensions&gt;&lt;ns3:name&gt;data&lt;/ns3:name&gt;&lt;ns3:type&gt;double&lt;/ns3:type&gt;&lt;ns3:base64Value&gt;"+
	    		trainingMicroArrayBase64String+ "&lt;/ns3:base64Value&gt;&lt;/ns3:array&gt;&lt;/ns3:list&gt;");
	    //2 add markerNames
	    trainingDataXMLString.append("&lt;ns3:list&gt;&lt;ns3:name&gt;markerNames&lt;/ns3:name&gt;&lt;ns3:type xsi:nil=\"true\"/&gt;&lt;ns3:length xsi:nil=\"true\"/&gt;");
	    for(int i=0;i&lt;trainingMicroArrayData.length;i++){
	    	trainingDataXMLString.append("&lt;ns3:scalar&gt;&lt;ns3:name&gt;markerNames&lt;/ns3:name&gt;&lt;ns3:type&gt;string&lt;/ns3:type&gt;&lt;ns3:value&gt;Gene_"+i+"&lt;/ns3:value&gt;&lt;/ns3:scalar&gt;");
	    	
	    }
	    trainingDataXMLString.append("&lt;/ns3:list&gt;");
	      //3 add markerDescriptions
	    trainingDataXMLString.append("&lt;ns3:list&gt;&lt;ns3:name&gt;markerDescriptions&lt;/ns3:name&gt;&lt;ns3:type xsi:nil=\"true\"/&gt;&lt;ns3:length xsi:nil=\"true\"/&gt;");
	    for(int i=0;i&lt;trainingMicroArrayData.length;i++){
	    	trainingDataXMLString.append("&lt;ns3:scalar&gt;&lt;ns3:name&gt;markerDescriptions&lt;/ns3:name&gt;&lt;ns3:type&gt;string&lt;/ns3:type&gt;&lt;ns3:value&gt;Gene_"+i+"&lt;/ns3:value&gt;&lt;/ns3:scalar&gt;");    	
	    }
	    trainingDataXMLString.append("&lt;/ns3:list&gt;");
	    
	    
	    //4 add sampleNames
	    trainingDataXMLString.append("&lt;ns3:list&gt;&lt;ns3:name&gt;sampleNames&lt;/ns3:name&gt;&lt;ns3:type xsi:nil=\"true\"/&gt;&lt;ns3:length xsi:nil=\"true\"/&gt;");
	    for(int i=0;i&lt;trainingMicroArrayData[0].length;i++){
	    	trainingDataXMLString.append("&lt;ns3:scalar&gt;&lt;ns3:name&gt;sampleNames&lt;/ns3:name&gt;&lt;ns3:type&gt;string&lt;/ns3:type&gt;&lt;ns3:value&gt;trainingSample_"+i+"&lt;/ns3:value&gt;&lt;/ns3:scalar&gt;");    	
	    }
	    trainingDataXMLString.append("&lt;/ns3:list&gt;");	    
	    trainingDataXMLString.append("&lt;/ns3:Data&gt;");
	   
	    //test data-----------------------------------------------------------------	 
	    StringBuffer testDataXMLString = new StringBuffer ("&lt;ns3:Data xmlns:ns3=\"gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml\"" +
		" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"&gt;");
	    //&lt;data&gt; contains four &lt;list&gt;:
	    // 1 add the base64value
	    testDataXMLString.append("&lt;ns3:list&gt;&lt;ns3:name&gt;data&lt;/ns3:name&gt;&lt;ns3:type xsi:nil=\"true\"/&gt;&lt;ns3:length xsi:nil=\"true\"/&gt;&lt;ns3:array&gt;&lt;ns3:dimensions&gt;"
		+testMicroArrayData.length+","+testMicroArrayData[0].length+
		"&lt;/ns3:dimensions&gt;&lt;ns3:name&gt;data&lt;/ns3:name&gt;&lt;ns3:type&gt;double&lt;/ns3:type&gt;&lt;ns3:base64Value&gt;"+
		testMicroArrayBase64String+ "&lt;/ns3:base64Value&gt;&lt;/ns3:array&gt;&lt;/ns3:list&gt;");
	    
	    //2 add markerNames
	    testDataXMLString.append("&lt;ns3:list&gt;&lt;ns3:name&gt;markerNames&lt;/ns3:name&gt;&lt;ns3:type xsi:nil=\"true\"/&gt;&lt;ns3:length xsi:nil=\"true\"/&gt;");
	    for(int i=0;i&lt;testMicroArrayData.length;i++){
	    	testDataXMLString.append("&lt;ns3:scalar&gt;&lt;ns3:name&gt;markerNames&lt;/ns3:name&gt;&lt;ns3:type&gt;string&lt;/ns3:type&gt;&lt;ns3:value&gt;Gene_"+i+"&lt;/ns3:value&gt;&lt;/ns3:scalar&gt;");
	    	}
	    testDataXMLString.append("&lt;/ns3:list&gt;");
	    //3 add markerDescriptions
	    testDataXMLString.append("&lt;ns3:list&gt;&lt;ns3:name&gt;markerDescriptions&lt;/ns3:name&gt;&lt;ns3:type xsi:nil=\"true\"/&gt;&lt;ns3:length xsi:nil=\"true\"/&gt;");
	    for(int i=0;i&lt;testMicroArrayData.length;i++){
	    	testDataXMLString.append("&lt;ns3:scalar&gt;&lt;ns3:name&gt;markerDescriptions&lt;/ns3:name&gt;&lt;ns3:type&gt;string&lt;/ns3:type&gt;&lt;ns3:value&gt;Gene_");
	    	testDataXMLString.append(i);
	    	testDataXMLString.append("&lt;/ns3:value&gt;&lt;/ns3:scalar&gt;");    	
	    }
	    testDataXMLString.append("&lt;/ns3:list&gt;");
	    //4 add sampleNames
	    testDataXMLString.append("&lt;ns3:list&gt;&lt;ns3:name&gt;sampleNames&lt;/ns3:name&gt;&lt;ns3:type xsi:nil=\"true\"/&gt;&lt;ns3:length xsi:nil=\"true\"/&gt;");
	    for(int i=0;i&lt;testMicroArrayData[0].length;i++){
	    	testDataXMLString.append("&lt;ns3:scalar&gt;&lt;ns3:name&gt;sampleNames&lt;/ns3:name&gt;&lt;ns3:type&gt;string&lt;/ns3:type&gt;&lt;ns3:value&gt;testSample_"+i+"&lt;/ns3:value&gt;&lt;/ns3:scalar&gt;");    	
	    }
	    testDataXMLString.append("&lt;/ns3:list&gt;");	    
	    testDataXMLString.append("&lt;/ns3:Data&gt;");
	    //System.out.println(testDataXMLString);
		trainingClass = trainingClassMembershipXMLString.toString();
		testClass = testClassMembershipXMLString.toString();
   		trainingDataString = trainingDataXMLString.toString();
		testDataString = testDataXMLString.toString();
	    /*
	    //write the string to some files for testing purpose
	    File trainingClassMembershipFile = new File(dir+"trainingClassMembership.xml");
	    File testClassMembershipFile = new File(dir+"testClassMembership.xml");
	    File trainingDataFile = new File(dir+"trainingData.xml");
	    
		try {
			//use buffering
		    Writer trainingClassMembershipFileOutput = new BufferedWriter(new FileWriter(trainingClassMembershipFile));
		    Writer testClassMembershipFileOutput = new BufferedWriter(new FileWriter(testClassMembershipFile));
		    Writer trainingDataFileOutput = new BufferedWriter(new FileWriter(trainingDataFile));
		   	    
		    OutputStream os = new FileOutputStream(dir+"testData.xml");
		    
		    try {
		      //FileWriter always assumes default encoding is OK!
		    	trainingClassMembershipFileOutput.write(new String(trainingClassMembershipXMLString));
		    	testClassMembershipFileOutput.write(new String(testClassMembershipXMLString));
		    	trainingDataFileOutput.write(new String(trainingDataXMLString));
		    	//testDataFileOutput.write(testDataXMLString.toString());
		    	byte [] bytes = testDataXMLString.toString().getBytes();
		    	os.write(bytes);
			    os.close();
		    	System.out.println("Finished file writing.");
			
		    	
		    }
		    finally {
		    	trainingClassMembershipFileOutput.close();
		    	testClassMembershipFileOutput.close();
		    	trainingDataFileOutput.close();
		    }

		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		*/</script>
  <dependencies />
  <classLoaderSharing>workflow</classLoaderSharing>
  <localDependencies />
  <artifactDependencies />
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>i</name>
      <depth>0</depth>
      <mimeTypes>
        <string>l('text/plain')</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>hybridizationString</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>trainingClass</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/plain'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>testClass</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/plain'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>trainingDataString</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/plain'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>testDataString</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/plain'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><dot><port name="i" depth="0" /><port name="hybridizationString" depth="0" /></dot></strategy></iteration></iterationStrategyStack></processor><processor><name>cqlQueryXML</name><inputPorts><port><name>CQLQuery</name><depth>0</depth></port></inputPorts><outputPorts><port><name>output</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLInputSplitterActivity</class><inputMap><map from="CQLQuery" to="CQLQuery" /></inputMap><outputMap><map from="output" to="output" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="&amp;gt;&amp;gt;QueryRequest&amp;gt;cqlQuery" name="cqlQuery" qname="{http://gov.nih.nci.cagrid.data/DataService}&amp;gt;QueryRequest&amp;gt;cqlQuery"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="CQLQuery" name="CQLQuery" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}&amp;gt;&amp;gt;QueryRequest&amp;gt;cqlQuery&amp;gt;CQLQuery"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="Object" name="Target" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}&amp;gt;CQLQuery&amp;gt;Target"&gt;&lt;s:elements&gt;&lt;s:complextype optional="true" unbounded="false" typename="Attribute" name="Attribute" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Attribute"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="true" unbounded="false" typename="Association" name="Association" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Association"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="true" unbounded="false" typename="Group" name="Group" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Group"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Association" name="Association" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Association"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Association" optional="false" unbounded="false" typename="Association" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Attribute" name="Attribute" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Attribute"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Attribute" optional="false" unbounded="false" typename="Attribute" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Group" name="Group" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Group"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="Group" name="" qname="Group"&gt;&lt;s:elements&gt;&lt;s:arraytype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Association" optional="true" unbounded="true" wrapped="false" typename="Association" name="Association" /&gt;&lt;s:arraytype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Attribute" optional="true" unbounded="true" wrapped="false" typename="Attribute" name="Attribute" /&gt;&lt;s:arraytype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Group" optional="true" unbounded="true" wrapped="false" typename="Group" name="Group" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="true" unbounded="false" typename="QueryModifier" name="QueryModifier" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}&amp;gt;CQLQuery&amp;gt;QueryModifier"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="string" name="AttributeNames" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}QueryModifier&amp;gt;AttributeNames"&gt;&lt;s:elementtype&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="" qname="{http://www.w3.org/2001/XMLSchema}string" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:basetype optional="true" unbounded="false" typename="string" name="DistinctAttribute" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}QueryModifier&amp;gt;DistinctAttribute" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>CQLQuery</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>output</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="CQLQuery" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>parametersXML9</name><inputPorts><port><name>input</name><depth>0</depth></port></inputPorts><outputPorts><port><name>CQLQueryResultCollection</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLOutputSplitterActivity</class><inputMap><map from="input" to="input" /></inputMap><outputMap><map from="CQLQueryResultCollection" to="CQLQueryResultCollection" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="QueryResponse" name="parameters" qname="{http://gov.nih.nci.cagrid.data/DataService}QueryResponse"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="CQLQueryResultCollection" name="CQLQueryResultCollection" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}&amp;gt;QueryResponse&amp;gt;CQLQueryResultCollection"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="CQLObjectResult" name="ObjectResult" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLQueryResults&amp;gt;ObjectResult"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="CQLObjectResult" name="" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLObjectResult"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="any" name="any" qname="any" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="CQLIdentifierResult" name="IdentifierResult" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLQueryResults&amp;gt;IdentifierResult"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="CQLIdentifierResult" name="" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLIdentifierResult"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="TBDIdentifier" name="Identifier" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLIdentifierResult&amp;gt;Identifier"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="CQLAttributeResult" name="AttributeResult" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLQueryResults&amp;gt;AttributeResult"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="CQLAttributeResult" name="" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLAttributeResult"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="false" unbounded="true" wrapped="false" typename="TargetAttribute" name="Attribute" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLAttributeResult&amp;gt;Attribute"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="TargetAttribute" name="" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}TargetAttribute"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:complextype optional="true" unbounded="false" typename="CQLCountResult" name="CountResult" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLQueryResults&amp;gt;CountResult"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>input</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>CQLQueryResultCollection</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="input" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>getExperiment</name><inputPorts><port><name>parameters</name><depth>0</depth></port></inputPorts><outputPorts><port><name>attachmentList</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>parameters</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.wsdl.WSDLActivity</class><inputMap><map from="parameters" to="parameters" /></inputMap><outputMap><map from="parameters" to="parameters" /><map from="attachmentList" to="attachmentList" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean xmlns="">
  <wsdl>http://array.nci.nih.gov/wsrf/services/cagrid/CaArraySvc?wsdl</wsdl>
  <operation>query</operation>
</net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="parameters" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>parametersXML5</name><inputPorts><port><name>input</name><depth>0</depth></port></inputPorts><outputPorts><port><name>CQLQueryResultCollection</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLOutputSplitterActivity</class><inputMap><map from="input" to="input" /></inputMap><outputMap><map from="CQLQueryResultCollection" to="CQLQueryResultCollection" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="QueryResponse" name="parameters" qname="{http://gov.nih.nci.cagrid.data/DataService}QueryResponse"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="CQLQueryResultCollection" name="CQLQueryResultCollection" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}&amp;gt;QueryResponse&amp;gt;CQLQueryResultCollection"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="CQLObjectResult" name="ObjectResult" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLQueryResults&amp;gt;ObjectResult"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="CQLObjectResult" name="" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLObjectResult"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="any" name="any" qname="any" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="CQLIdentifierResult" name="IdentifierResult" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLQueryResults&amp;gt;IdentifierResult"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="CQLIdentifierResult" name="" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLIdentifierResult"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="TBDIdentifier" name="Identifier" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLIdentifierResult&amp;gt;Identifier"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="CQLAttributeResult" name="AttributeResult" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLQueryResults&amp;gt;AttributeResult"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="CQLAttributeResult" name="" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLAttributeResult"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="false" unbounded="true" wrapped="false" typename="TargetAttribute" name="Attribute" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLAttributeResult&amp;gt;Attribute"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="TargetAttribute" name="" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}TargetAttribute"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:complextype optional="true" unbounded="false" typename="CQLCountResult" name="CountResult" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLQueryResults&amp;gt;CountResult"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>input</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>CQLQueryResultCollection</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="input" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>parametersXML1</name><inputPorts><port><name>input</name><depth>0</depth></port></inputPorts><outputPorts><port><name>CQLQueryResultCollection</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLOutputSplitterActivity</class><inputMap><map from="input" to="input" /></inputMap><outputMap><map from="CQLQueryResultCollection" to="CQLQueryResultCollection" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="QueryResponse" name="parameters" qname="{http://gov.nih.nci.cagrid.data/DataService}QueryResponse"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="CQLQueryResultCollection" name="CQLQueryResultCollection" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}&amp;gt;QueryResponse&amp;gt;CQLQueryResultCollection"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="CQLObjectResult" name="ObjectResult" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLQueryResults&amp;gt;ObjectResult"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="CQLObjectResult" name="" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLObjectResult"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="any" name="any" qname="any" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="CQLIdentifierResult" name="IdentifierResult" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLQueryResults&amp;gt;IdentifierResult"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="CQLIdentifierResult" name="" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLIdentifierResult"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="TBDIdentifier" name="Identifier" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLIdentifierResult&amp;gt;Identifier"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="CQLAttributeResult" name="AttributeResult" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLQueryResults&amp;gt;AttributeResult"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="CQLAttributeResult" name="" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLAttributeResult"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="false" unbounded="true" wrapped="false" typename="TargetAttribute" name="Attribute" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLAttributeResult&amp;gt;Attribute"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="TargetAttribute" name="" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}TargetAttribute"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:complextype optional="true" unbounded="false" typename="CQLCountResult" name="CountResult" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLQueryResults&amp;gt;CountResult"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>input</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>CQLQueryResultCollection</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="input" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>CQLQueryResultCollectionXML</name><inputPorts><port><name>input</name><depth>0</depth></port></inputPorts><outputPorts><port><name>CountResult</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>AttributeResult</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>ObjectResult</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>IdentifierResult</name><depth>1</depth><granularDepth>1</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLOutputSplitterActivity</class><inputMap><map from="input" to="input" /></inputMap><outputMap><map from="AttributeResult" to="AttributeResult" /><map from="IdentifierResult" to="IdentifierResult" /><map from="CountResult" to="CountResult" /><map from="ObjectResult" to="ObjectResult" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="CQLQueryResultCollection" name="CQLQueryResultCollection" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}&amp;gt;QueryResponse&amp;gt;CQLQueryResultCollection"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="CQLObjectResult" name="ObjectResult" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLQueryResults&amp;gt;ObjectResult"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="CQLObjectResult" name="" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLObjectResult"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="any" name="any" qname="any" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="CQLIdentifierResult" name="IdentifierResult" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLQueryResults&amp;gt;IdentifierResult"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="CQLIdentifierResult" name="" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLIdentifierResult"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="TBDIdentifier" name="Identifier" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLIdentifierResult&amp;gt;Identifier"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="CQLAttributeResult" name="AttributeResult" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLQueryResults&amp;gt;AttributeResult"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="CQLAttributeResult" name="" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLAttributeResult"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="false" unbounded="true" wrapped="false" typename="TargetAttribute" name="Attribute" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLAttributeResult&amp;gt;Attribute"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="TargetAttribute" name="" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}TargetAttribute"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:complextype optional="true" unbounded="false" typename="CQLCountResult" name="CountResult" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLQueryResults&amp;gt;CountResult"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>input</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>1</granularDepth>
      <name>ObjectResult</name>
      <depth>1</depth>
      <mimeTypes>
        <string>l('text/xml')</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>1</granularDepth>
      <name>IdentifierResult</name>
      <depth>1</depth>
      <mimeTypes>
        <string>l('text/xml')</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>1</granularDepth>
      <name>AttributeResult</name>
      <depth>1</depth>
      <mimeTypes>
        <string>l('text/xml')</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>CountResult</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="input" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>parametersXML</name><inputPorts><port><name>cqlQuery</name><depth>0</depth></port></inputPorts><outputPorts><port><name>output</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLInputSplitterActivity</class><inputMap><map from="cqlQuery" to="cqlQuery" /></inputMap><outputMap><map from="output" to="output" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="QueryRequest" name="parameters" qname="{http://gov.nih.nci.cagrid.data/DataService}QueryRequest"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="&amp;gt;&amp;gt;QueryRequest&amp;gt;cqlQuery" name="cqlQuery" qname="{http://gov.nih.nci.cagrid.data/DataService}&amp;gt;QueryRequest&amp;gt;cqlQuery"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="CQLQuery" name="CQLQuery" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}&amp;gt;&amp;gt;QueryRequest&amp;gt;cqlQuery&amp;gt;CQLQuery"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="Object" name="Target" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}&amp;gt;CQLQuery&amp;gt;Target"&gt;&lt;s:elements&gt;&lt;s:complextype optional="true" unbounded="false" typename="Attribute" name="Attribute" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Attribute"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="true" unbounded="false" typename="Association" name="Association" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Association"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="true" unbounded="false" typename="Group" name="Group" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Group"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Association" name="Association" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Association"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Association" optional="false" unbounded="false" typename="Association" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Attribute" name="Attribute" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Attribute"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Attribute" optional="false" unbounded="false" typename="Attribute" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Group" name="Group" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Group"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="Group" name="" qname="Group"&gt;&lt;s:elements&gt;&lt;s:arraytype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Association" optional="true" unbounded="true" wrapped="false" typename="Association" name="Association" /&gt;&lt;s:arraytype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Attribute" optional="true" unbounded="true" wrapped="false" typename="Attribute" name="Attribute" /&gt;&lt;s:arraytype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Group" optional="true" unbounded="true" wrapped="false" typename="Group" name="Group" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="true" unbounded="false" typename="QueryModifier" name="QueryModifier" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}&amp;gt;CQLQuery&amp;gt;QueryModifier"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="string" name="AttributeNames" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}QueryModifier&amp;gt;AttributeNames"&gt;&lt;s:elementtype&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="" qname="{http://www.w3.org/2001/XMLSchema}string" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:basetype optional="true" unbounded="false" typename="string" name="DistinctAttribute" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}QueryModifier&amp;gt;DistinctAttribute" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>cqlQuery</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>output</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="cqlQuery" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>parametersXML8</name><inputPorts><port><name>cqlQuery</name><depth>0</depth></port></inputPorts><outputPorts><port><name>output</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLInputSplitterActivity</class><inputMap><map from="cqlQuery" to="cqlQuery" /></inputMap><outputMap><map from="output" to="output" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="QueryRequest" name="parameters" qname="{http://gov.nih.nci.cagrid.data/DataService}QueryRequest"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="&amp;gt;&amp;gt;QueryRequest&amp;gt;cqlQuery" name="cqlQuery" qname="{http://gov.nih.nci.cagrid.data/DataService}&amp;gt;QueryRequest&amp;gt;cqlQuery"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="CQLQuery" name="CQLQuery" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}&amp;gt;&amp;gt;QueryRequest&amp;gt;cqlQuery&amp;gt;CQLQuery"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="Object" name="Target" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}&amp;gt;CQLQuery&amp;gt;Target"&gt;&lt;s:elements&gt;&lt;s:complextype optional="true" unbounded="false" typename="Attribute" name="Attribute" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Attribute"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="true" unbounded="false" typename="Association" name="Association" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Association"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="true" unbounded="false" typename="Group" name="Group" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Group"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Association" name="Association" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Association"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Association" optional="false" unbounded="false" typename="Association" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Attribute" name="Attribute" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Attribute"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Attribute" optional="false" unbounded="false" typename="Attribute" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Group" name="Group" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Group"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="Group" name="" qname="Group"&gt;&lt;s:elements&gt;&lt;s:arraytype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Association" optional="true" unbounded="true" wrapped="false" typename="Association" name="Association" /&gt;&lt;s:arraytype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Attribute" optional="true" unbounded="true" wrapped="false" typename="Attribute" name="Attribute" /&gt;&lt;s:arraytype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Group" optional="true" unbounded="true" wrapped="false" typename="Group" name="Group" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="true" unbounded="false" typename="QueryModifier" name="QueryModifier" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}&amp;gt;CQLQuery&amp;gt;QueryModifier"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="string" name="AttributeNames" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}QueryModifier&amp;gt;AttributeNames"&gt;&lt;s:elementtype&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="" qname="{http://www.w3.org/2001/XMLSchema}string" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:basetype optional="true" unbounded="false" typename="string" name="DistinctAttribute" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}QueryModifier&amp;gt;DistinctAttribute" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>cqlQuery</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>output</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="cqlQuery" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>parametersXML2</name><inputPorts><port><name>cqlQuery</name><depth>0</depth></port></inputPorts><outputPorts><port><name>output</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLInputSplitterActivity</class><inputMap><map from="cqlQuery" to="cqlQuery" /></inputMap><outputMap><map from="output" to="output" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="QueryRequest" name="parameters" qname="{http://gov.nih.nci.cagrid.data/DataService}QueryRequest"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="&amp;gt;&amp;gt;QueryRequest&amp;gt;cqlQuery" name="cqlQuery" qname="{http://gov.nih.nci.cagrid.data/DataService}&amp;gt;QueryRequest&amp;gt;cqlQuery"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="CQLQuery" name="CQLQuery" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}&amp;gt;&amp;gt;QueryRequest&amp;gt;cqlQuery&amp;gt;CQLQuery"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="Object" name="Target" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}&amp;gt;CQLQuery&amp;gt;Target"&gt;&lt;s:elements&gt;&lt;s:complextype optional="true" unbounded="false" typename="Attribute" name="Attribute" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Attribute"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="true" unbounded="false" typename="Association" name="Association" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Association"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="true" unbounded="false" typename="Group" name="Group" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Group"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Association" name="Association" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Association"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Association" optional="false" unbounded="false" typename="Association" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Attribute" name="Attribute" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Attribute"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Attribute" optional="false" unbounded="false" typename="Attribute" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Group" name="Group" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Group"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="Group" name="" qname="Group"&gt;&lt;s:elements&gt;&lt;s:arraytype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Association" optional="true" unbounded="true" wrapped="false" typename="Association" name="Association" /&gt;&lt;s:arraytype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Attribute" optional="true" unbounded="true" wrapped="false" typename="Attribute" name="Attribute" /&gt;&lt;s:arraytype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Group" optional="true" unbounded="true" wrapped="false" typename="Group" name="Group" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="true" unbounded="false" typename="QueryModifier" name="QueryModifier" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}&amp;gt;CQLQuery&amp;gt;QueryModifier"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="string" name="AttributeNames" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}QueryModifier&amp;gt;AttributeNames"&gt;&lt;s:elementtype&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="" qname="{http://www.w3.org/2001/XMLSchema}string" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:basetype optional="true" unbounded="false" typename="string" name="DistinctAttribute" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}QueryModifier&amp;gt;DistinctAttribute" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>cqlQuery</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>output</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="cqlQuery" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>parametersXML3</name><inputPorts><port><name>input</name><depth>0</depth></port></inputPorts><outputPorts><port><name>CQLQueryResultCollection</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLOutputSplitterActivity</class><inputMap><map from="input" to="input" /></inputMap><outputMap><map from="CQLQueryResultCollection" to="CQLQueryResultCollection" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="QueryResponse" name="parameters" qname="{http://gov.nih.nci.cagrid.data/DataService}QueryResponse"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="CQLQueryResultCollection" name="CQLQueryResultCollection" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}&amp;gt;QueryResponse&amp;gt;CQLQueryResultCollection"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="CQLObjectResult" name="ObjectResult" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLQueryResults&amp;gt;ObjectResult"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="CQLObjectResult" name="" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLObjectResult"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="any" name="any" qname="any" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="CQLIdentifierResult" name="IdentifierResult" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLQueryResults&amp;gt;IdentifierResult"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="CQLIdentifierResult" name="" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLIdentifierResult"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="TBDIdentifier" name="Identifier" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLIdentifierResult&amp;gt;Identifier"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="CQLAttributeResult" name="AttributeResult" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLQueryResults&amp;gt;AttributeResult"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="CQLAttributeResult" name="" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLAttributeResult"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="false" unbounded="true" wrapped="false" typename="TargetAttribute" name="Attribute" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLAttributeResult&amp;gt;Attribute"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="TargetAttribute" name="" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}TargetAttribute"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:complextype optional="true" unbounded="false" typename="CQLCountResult" name="CountResult" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLQueryResults&amp;gt;CountResult"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>input</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>CQLQueryResultCollection</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="input" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>getHybridizationData</name><inputPorts><port><name>parameters</name><depth>0</depth></port></inputPorts><outputPorts><port><name>parameters</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>attachmentList</name><depth>1</depth><granularDepth>1</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.wsdl.WSDLActivity</class><inputMap><map from="parameters" to="parameters" /></inputMap><outputMap><map from="parameters" to="parameters" /><map from="attachmentList" to="attachmentList" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean xmlns="">
  <wsdl>http://array.nci.nih.gov/wsrf/services/cagrid/CaArraySvc?wsdl</wsdl>
  <operation>query</operation>
</net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="parameters" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>getDerivedArrayData</name><inputPorts><port><name>parameters</name><depth>0</depth></port></inputPorts><outputPorts><port><name>attachmentList</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>parameters</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.wsdl.WSDLActivity</class><inputMap><map from="parameters" to="parameters" /></inputMap><outputMap><map from="parameters" to="parameters" /><map from="attachmentList" to="attachmentList" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean xmlns="">
  <wsdl>http://array.nci.nih.gov/wsrf/services/cagrid/CaArraySvc?wsdl</wsdl>
  <operation>query</operation>
</net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="parameters" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>getHybridization</name><inputPorts><port><name>parameters</name><depth>0</depth></port></inputPorts><outputPorts><port><name>attachmentList</name><depth>1</depth><granularDepth>1</granularDepth></port><port><name>parameters</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.wsdl.WSDLActivity</class><inputMap><map from="parameters" to="parameters" /></inputMap><outputMap><map from="parameters" to="parameters" /><map from="attachmentList" to="attachmentList" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean xmlns="">
  <wsdl>http://array.nci.nih.gov:80/wsrf/services/cagrid/CaArraySvc?wsdl</wsdl>
  <operation>query</operation>
</net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="parameters" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>parametersXML7</name><inputPorts><port><name>input</name><depth>0</depth></port></inputPorts><outputPorts><port><name>CQLQueryResultCollection</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLOutputSplitterActivity</class><inputMap><map from="input" to="input" /></inputMap><outputMap><map from="CQLQueryResultCollection" to="CQLQueryResultCollection" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="QueryResponse" name="parameters" qname="{http://gov.nih.nci.cagrid.data/DataService}QueryResponse"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="CQLQueryResultCollection" name="CQLQueryResultCollection" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}&amp;gt;QueryResponse&amp;gt;CQLQueryResultCollection"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="CQLObjectResult" name="ObjectResult" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLQueryResults&amp;gt;ObjectResult"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="CQLObjectResult" name="" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLObjectResult"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="any" name="any" qname="any" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="CQLIdentifierResult" name="IdentifierResult" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLQueryResults&amp;gt;IdentifierResult"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="CQLIdentifierResult" name="" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLIdentifierResult"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="TBDIdentifier" name="Identifier" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLIdentifierResult&amp;gt;Identifier"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="CQLAttributeResult" name="AttributeResult" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLQueryResults&amp;gt;AttributeResult"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="CQLAttributeResult" name="" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLAttributeResult"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="false" unbounded="true" wrapped="false" typename="TargetAttribute" name="Attribute" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLAttributeResult&amp;gt;Attribute"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="TargetAttribute" name="" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}TargetAttribute"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:complextype optional="true" unbounded="false" typename="CQLCountResult" name="CountResult" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLResultSet}CQLQueryResults&amp;gt;CountResult"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>input</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>CQLQueryResultCollection</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="input" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>getDataSet</name><inputPorts><port><name>parameters</name><depth>0</depth></port></inputPorts><outputPorts><port><name>parameters</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>attachmentList</name><depth>1</depth><granularDepth>1</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.wsdl.WSDLActivity</class><inputMap><map from="parameters" to="parameters" /></inputMap><outputMap><map from="parameters" to="parameters" /><map from="attachmentList" to="attachmentList" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean xmlns="">
  <wsdl>http://array.nci.nih.gov/wsrf/services/cagrid/CaArraySvc?wsdl</wsdl>
  <operation>query</operation>
</net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="parameters" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>cqlQueryXML3</name><inputPorts><port><name>CQLQuery</name><depth>0</depth></port></inputPorts><outputPorts><port><name>output</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLInputSplitterActivity</class><inputMap><map from="CQLQuery" to="CQLQuery" /></inputMap><outputMap><map from="output" to="output" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="&amp;gt;&amp;gt;QueryRequest&amp;gt;cqlQuery" name="cqlQuery" qname="{http://gov.nih.nci.cagrid.data/DataService}&amp;gt;QueryRequest&amp;gt;cqlQuery"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="CQLQuery" name="CQLQuery" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}&amp;gt;&amp;gt;QueryRequest&amp;gt;cqlQuery&amp;gt;CQLQuery"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="Object" name="Target" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}&amp;gt;CQLQuery&amp;gt;Target"&gt;&lt;s:elements&gt;&lt;s:complextype optional="true" unbounded="false" typename="Attribute" name="Attribute" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Attribute"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="true" unbounded="false" typename="Association" name="Association" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Association"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="true" unbounded="false" typename="Group" name="Group" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Group"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Association" name="Association" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Association"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Association" optional="false" unbounded="false" typename="Association" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Attribute" name="Attribute" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Attribute"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Object&amp;gt;Attribute" optional="false" unbounded="false" typename="Attribute" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Group" name="Group" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Group"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="Group" name="" qname="Group"&gt;&lt;s:elements&gt;&lt;s:arraytype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Association" optional="true" unbounded="true" wrapped="false" typename="Association" name="Association" /&gt;&lt;s:arraytype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Attribute" optional="true" unbounded="true" wrapped="false" typename="Attribute" name="Attribute" /&gt;&lt;s:arraytype id="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}Group&amp;gt;Group" optional="true" unbounded="true" wrapped="false" typename="Group" name="Group" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="true" unbounded="false" typename="QueryModifier" name="QueryModifier" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}&amp;gt;CQLQuery&amp;gt;QueryModifier"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="string" name="AttributeNames" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}QueryModifier&amp;gt;AttributeNames"&gt;&lt;s:elementtype&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="" qname="{http://www.w3.org/2001/XMLSchema}string" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:basetype optional="true" unbounded="false" typename="string" name="DistinctAttribute" qname="{http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery}QueryModifier&amp;gt;DistinctAttribute" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>CQLQuery</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>output</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="CQLQuery" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>Beanshell2</name><inputPorts><port><name>expID</name><depth>0</depth></port></inputPorts><outputPorts><port><name>expCQL</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>beanshell-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity</class><inputMap><map from="expID" to="expID" /></inputMap><outputMap><map from="expCQL" to="expCQL" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean xmlns="">
  <script>expCQL = "&lt;ns1:CQLQuery xmlns:ns1=\"http://CQL.caBIG/1/gov.nih.nci.cagrid.CQLQuery\"&gt;&lt;ns1:Target name=\"gov.nih.nci.caarray.domain.project.Experiment\"&gt;&lt;ns1:Group logicRelation=\"AND\"&gt;&lt;ns1:Attribute name=\"id\" predicate=\"EQUAL_TO\" value=\""+ expID + "\"/&gt;&lt;/ns1:Group&gt;&lt;/ns1:Target&gt;&lt;/ns1:CQLQuery&gt;";</script>
  <dependencies />
  <classLoaderSharing>workflow</classLoaderSharing>
  <localDependencies />
  <artifactDependencies />
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>expID</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>expCQL</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="expID" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor></processors><conditions /><datalinks><datalink><sink type="processor"><processor>Beanshell_3</processor><port>i</port></sink><source type="processor"><processor>parametersXML5</processor><port>CQLQueryResultCollection</port></source></datalink><datalink><sink type="processor"><processor>Beanshell_2</processor><port>i</port></sink><source type="processor"><processor>parametersXML3</processor><port>CQLQueryResultCollection</port></source></datalink><datalink><sink type="processor"><processor>Beanshell</processor><port>i</port></sink><source type="processor"><processor>CQLQueryResultCollectionXML</processor><port>ObjectResult</port></source></datalink><datalink><sink type="processor"><processor>parametersXML4</processor><port>cqlQuery</port></sink><source type="processor"><processor>cqlQueryXML2</processor><port>output</port></source></datalink><datalink><sink type="processor"><processor>cqlQueryXML2</processor><port>CQLQuery</port></sink><source type="processor"><processor>Beanshell_2</processor><port>o</port></source></datalink><datalink><sink type="processor"><processor>Beanshell_4</processor><port>i</port></sink><source type="processor"><processor>parametersXML7</processor><port>CQLQueryResultCollection</port></source></datalink><datalink><sink type="processor"><processor>cqlQueryXML1</processor><port>CQLQuery</port></sink><source type="processor"><processor>Beanshell</processor><port>o</port></source></datalink><datalink><sink type="processor"><processor>cqlQueryXML4</processor><port>CQLQuery</port></sink><source type="processor"><processor>Beanshell_4</processor><port>o</port></source></datalink><datalink><sink type="processor"><processor>parametersXML6</processor><port>cqlQuery</port></sink><source type="processor"><processor>cqlQueryXML3</processor><port>output</port></source></datalink><datalink><sink type="processor"><processor>Beanshell_6</processor><port>i</port></sink><source type="processor"><processor>parametersXML9</processor><port>CQLQueryResultCollection</port></source></datalink><datalink><sink type="processor"><processor>Beanshell_6</processor><port>hybridizationString</port></sink><source type="processor"><processor>parametersXML3</processor><port>CQLQueryResultCollection</port></source></datalink><datalink><sink type="processor"><processor>cqlQueryXML</processor><port>CQLQuery</port></sink><source type="processor"><processor>Beanshell2</processor><port>expCQL</port></source></datalink><datalink><sink type="processor"><processor>parametersXML9</processor><port>input</port></sink><source type="processor"><processor>getHybridizationData</processor><port>parameters</port></source></datalink><datalink><sink type="processor"><processor>getExperiment</processor><port>parameters</port></sink><source type="processor"><processor>parametersXML</processor><port>output</port></source></datalink><datalink><sink type="processor"><processor>parametersXML5</processor><port>input</port></sink><source type="processor"><processor>getDerivedArrayData</processor><port>parameters</port></source></datalink><datalink><sink type="processor"><processor>parametersXML1</processor><port>input</port></sink><source type="processor"><processor>getExperiment</processor><port>parameters</port></source></datalink><datalink><sink type="processor"><processor>CQLQueryResultCollectionXML</processor><port>input</port></sink><source type="processor"><processor>parametersXML1</processor><port>CQLQueryResultCollection</port></source></datalink><datalink><sink type="processor"><processor>parametersXML</processor><port>cqlQuery</port></sink><source type="processor"><processor>cqlQueryXML</processor><port>output</port></source></datalink><datalink><sink type="processor"><processor>parametersXML8</processor><port>cqlQuery</port></sink><source type="processor"><processor>cqlQueryXML4</processor><port>output</port></source></datalink><datalink><sink type="processor"><processor>parametersXML2</processor><port>cqlQuery</port></sink><source type="processor"><processor>cqlQueryXML1</processor><port>output</port></source></datalink><datalink><sink type="processor"><processor>parametersXML3</processor><port>input</port></sink><source type="processor"><processor>getHybridization</processor><port>parameters</port></source></datalink><datalink><sink type="processor"><processor>getHybridizationData</processor><port>parameters</port></sink><source type="processor"><processor>parametersXML8</processor><port>output</port></source></datalink><datalink><sink type="processor"><processor>getDerivedArrayData</processor><port>parameters</port></sink><source type="processor"><processor>parametersXML4</processor><port>output</port></source></datalink><datalink><sink type="processor"><processor>getHybridization</processor><port>parameters</port></sink><source type="processor"><processor>parametersXML2</processor><port>output</port></source></datalink><datalink><sink type="processor"><processor>parametersXML7</processor><port>input</port></sink><source type="processor"><processor>getDataSet</processor><port>parameters</port></source></datalink><datalink><sink type="processor"><processor>getDataSet</processor><port>parameters</port></sink><source type="processor"><processor>parametersXML6</processor><port>output</port></source></datalink><datalink><sink type="processor"><processor>cqlQueryXML3</processor><port>CQLQuery</port></sink><source type="processor"><processor>Beanshell_3</processor><port>o</port></source></datalink><datalink><sink type="processor"><processor>Beanshell2</processor><port>expID</port></sink><source type="dataflow"><port>EXPID</port></source></datalink><datalink><sink type="dataflow"><port>testClass</port></sink><source type="processor"><processor>Beanshell_6</processor><port>testClass</port></source></datalink><datalink><sink type="dataflow"><port>testData</port></sink><source type="processor"><processor>Beanshell_6</processor><port>testDataString</port></source></datalink><datalink><sink type="dataflow"><port>trainingData</port></sink><source type="processor"><processor>Beanshell_6</processor><port>trainingDataString</port></source></datalink><datalink><sink type="dataflow"><port>trainingClass</port></sink><source type="processor"><processor>Beanshell_6</processor><port>trainingClass</port></source></datalink></datalinks><annotations /></dataflow><dataflow id="2f6b4244-30ba-489f-819e-590181d63bd1" role="nested"><name>caArray</name><inputPorts><port><name>trainingData</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>testData</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port></inputPorts><outputPorts><port><name>trainingData</name></port><port><name>testData</name></port></outputPorts><processors><processor><name>dataXML</name><inputPorts><port><name>Data</name><depth>0</depth></port></inputPorts><outputPorts><port><name>output</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLInputSplitterActivity</class><inputMap><map from="Data" to="Data" /></inputMap><outputMap><map from="output" to="output" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="&amp;gt;&amp;gt;PerformAnalysisRequest&amp;gt;data" name="data" qname="{http://org.genepattern.cagrid.service/PreprocessDatasetSTATMLService}&amp;gt;PerformAnalysisRequest&amp;gt;data"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="Data" name="Data" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}&amp;gt;&amp;gt;PerformAnalysisRequest&amp;gt;data&amp;gt;Data"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Scalar" name="scalar" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Data&amp;gt;scalar"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="Scalar" name="" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="name" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar&amp;gt;name" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="type" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar&amp;gt;type" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="value" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar&amp;gt;value" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="List" name="list" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Data&amp;gt;list"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="List" name="" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="name" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;name" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="type" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;type" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="integer" name="length" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;length" /&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Scalar" name="scalar" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;scalar"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar" optional="false" unbounded="false" typename="Scalar" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="List" name="list" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;list"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="List" name="" qname="List"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="name" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;name" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="type" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;type" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="integer" name="length" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;length" /&gt;&lt;s:arraytype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;scalar" optional="true" unbounded="true" wrapped="false" typename="Scalar" name="scalar" /&gt;&lt;s:arraytype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;list" optional="true" unbounded="true" wrapped="false" typename="List" name="list" /&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Null" name="aNull" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;aNull"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="Null" name="" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Null"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Array" name="array" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;array"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="Array" name="" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="dimensions" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array&amp;gt;dimensions" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="name" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array&amp;gt;name" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="type" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array&amp;gt;type" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="base64Value" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array&amp;gt;base64Value" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;aNull" optional="true" unbounded="true" wrapped="false" typename="Null" name="aNull" /&gt;&lt;s:arraytype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;array" optional="true" unbounded="true" wrapped="false" typename="Array" name="array" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Null" name="aNull" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Data&amp;gt;aNull"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Null" optional="false" unbounded="false" typename="Null" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Array" name="array" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Data&amp;gt;array"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array" optional="false" unbounded="false" typename="Array" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>Data</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>output</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="Data" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>PreprocessDatasetParameterSetXML1</name><inputPorts><port><name>threshold</name><depth>0</depth></port><port><name>numExclude</name><depth>0</depth></port><port><name>preprocessingFlag</name><depth>0</depth></port><port><name>logBaseTwo</name><depth>0</depth></port><port><name>filterFlag</name><depth>0</depth></port><port><name>minDelta</name><depth>0</depth></port><port><name>ceiling</name><depth>0</depth></port><port><name>minChange</name><depth>0</depth></port><port><name>columnThreshold</name><depth>0</depth></port><port><name>maxSigmaBinning</name><depth>0</depth></port><port><name>probabilityThreshold</name><depth>0</depth></port><port><name>numberOfColumnsAboveThreshold</name><depth>0</depth></port></inputPorts><outputPorts><port><name>output</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLInputSplitterActivity</class><inputMap><map from="minDelta" to="minDelta" /><map from="preprocessingFlag" to="preprocessingFlag" /><map from="filterFlag" to="filterFlag" /><map from="maxSigmaBinning" to="maxSigmaBinning" /><map from="ceiling" to="ceiling" /><map from="numExclude" to="numExclude" /><map from="minChange" to="minChange" /><map from="logBaseTwo" to="logBaseTwo" /><map from="probabilityThreshold" to="probabilityThreshold" /><map from="threshold" to="threshold" /><map from="columnThreshold" to="columnThreshold" /><map from="numberOfColumnsAboveThreshold" to="numberOfColumnsAboveThreshold" /></inputMap><outputMap><map from="output" to="output" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="PreprocessDatasetParameterSet" name="PreprocessDatasetParameterSet" qname="{gme://GenePattern.caBIG/1/gridExtensions}&amp;gt;&amp;gt;PerformAnalysisRequest&amp;gt;preprocessDatasetParameterSet&amp;gt;PreprocessDatasetParameterSet"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="float" name="ceiling" qname="PreprocessDatasetParameterSet&amp;gt;ceiling" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="float" name="columnThreshold" qname="PreprocessDatasetParameterSet&amp;gt;columnThreshold" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="boolean" name="filterFlag" qname="PreprocessDatasetParameterSet&amp;gt;filterFlag" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="boolean" name="logBaseTwo" qname="PreprocessDatasetParameterSet&amp;gt;logBaseTwo" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="int" name="maxSigmaBinning" qname="PreprocessDatasetParameterSet&amp;gt;maxSigmaBinning" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="float" name="minChange" qname="PreprocessDatasetParameterSet&amp;gt;minChange" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="float" name="minDelta" qname="PreprocessDatasetParameterSet&amp;gt;minDelta" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="int" name="numberOfColumnsAboveThreshold" qname="PreprocessDatasetParameterSet&amp;gt;numberOfColumnsAboveThreshold" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="int" name="numExclude" qname="PreprocessDatasetParameterSet&amp;gt;numExclude" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="preprocessingFlag" qname="PreprocessDatasetParameterSet&amp;gt;preprocessingFlag" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="float" name="probabilityThreshold" qname="PreprocessDatasetParameterSet&amp;gt;probabilityThreshold" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="float" name="threshold" qname="PreprocessDatasetParameterSet&amp;gt;threshold" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>ceiling</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/plain'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>columnThreshold</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/plain'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>filterFlag</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/plain'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>logBaseTwo</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/plain'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>maxSigmaBinning</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/plain'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>minChange</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/plain'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>minDelta</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/plain'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>numberOfColumnsAboveThreshold</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/plain'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>numExclude</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/plain'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>preprocessingFlag</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/plain'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>probabilityThreshold</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/plain'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>threshold</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/plain'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>output</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><dot><port name="ceiling" depth="0" /><port name="columnThreshold" depth="0" /><port name="filterFlag" depth="0" /><port name="logBaseTwo" depth="0" /><port name="maxSigmaBinning" depth="0" /><port name="minChange" depth="0" /><port name="minDelta" depth="0" /><port name="numberOfColumnsAboveThreshold" depth="0" /><port name="numExclude" depth="0" /><port name="preprocessingFlag" depth="0" /><port name="probabilityThreshold" depth="0" /><port name="threshold" depth="0" /></dot></strategy></iteration></iterationStrategyStack></processor><processor><name>dataXML1</name><inputPorts><port><name>Data</name><depth>0</depth></port></inputPorts><outputPorts><port><name>output</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLInputSplitterActivity</class><inputMap><map from="Data" to="Data" /></inputMap><outputMap><map from="output" to="output" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="&amp;gt;&amp;gt;PerformAnalysisRequest&amp;gt;data" name="data" qname="{http://org.genepattern.cagrid.service/PreprocessDatasetSTATMLService}&amp;gt;PerformAnalysisRequest&amp;gt;data"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="Data" name="Data" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}&amp;gt;&amp;gt;PerformAnalysisRequest&amp;gt;data&amp;gt;Data"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Scalar" name="scalar" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Data&amp;gt;scalar"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="Scalar" name="" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="name" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar&amp;gt;name" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="type" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar&amp;gt;type" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="value" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar&amp;gt;value" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="List" name="list" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Data&amp;gt;list"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="List" name="" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="name" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;name" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="type" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;type" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="integer" name="length" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;length" /&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Scalar" name="scalar" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;scalar"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar" optional="false" unbounded="false" typename="Scalar" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="List" name="list" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;list"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="List" name="" qname="List"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="name" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;name" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="type" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;type" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="integer" name="length" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;length" /&gt;&lt;s:arraytype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;scalar" optional="true" unbounded="true" wrapped="false" typename="Scalar" name="scalar" /&gt;&lt;s:arraytype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;list" optional="true" unbounded="true" wrapped="false" typename="List" name="list" /&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Null" name="aNull" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;aNull"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="Null" name="" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Null"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Array" name="array" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;array"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="Array" name="" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="dimensions" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array&amp;gt;dimensions" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="name" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array&amp;gt;name" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="type" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array&amp;gt;type" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="base64Value" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array&amp;gt;base64Value" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;aNull" optional="true" unbounded="true" wrapped="false" typename="Null" name="aNull" /&gt;&lt;s:arraytype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;array" optional="true" unbounded="true" wrapped="false" typename="Array" name="array" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Null" name="aNull" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Data&amp;gt;aNull"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Null" optional="false" unbounded="false" typename="Null" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Array" name="array" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Data&amp;gt;array"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array" optional="false" unbounded="false" typename="Array" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>Data</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>output</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="Data" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>preprocessDatasetParameterSetXML2</name><inputPorts><port><name>PreprocessDatasetParameterSet</name><depth>0</depth></port></inputPorts><outputPorts><port><name>output</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLInputSplitterActivity</class><inputMap><map from="PreprocessDatasetParameterSet" to="PreprocessDatasetParameterSet" /></inputMap><outputMap><map from="output" to="output" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="&amp;gt;&amp;gt;PerformAnalysisRequest&amp;gt;preprocessDatasetParameterSet" name="preprocessDatasetParameterSet" qname="{http://org.genepattern.cagrid.service/PreprocessDatasetSTATMLService}&amp;gt;PerformAnalysisRequest&amp;gt;preprocessDatasetParameterSet"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="PreprocessDatasetParameterSet" name="PreprocessDatasetParameterSet" qname="{gme://GenePattern.caBIG/1/gridExtensions}&amp;gt;&amp;gt;PerformAnalysisRequest&amp;gt;preprocessDatasetParameterSet&amp;gt;PreprocessDatasetParameterSet"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="float" name="ceiling" qname="PreprocessDatasetParameterSet&amp;gt;ceiling" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="float" name="columnThreshold" qname="PreprocessDatasetParameterSet&amp;gt;columnThreshold" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="boolean" name="filterFlag" qname="PreprocessDatasetParameterSet&amp;gt;filterFlag" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="boolean" name="logBaseTwo" qname="PreprocessDatasetParameterSet&amp;gt;logBaseTwo" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="int" name="maxSigmaBinning" qname="PreprocessDatasetParameterSet&amp;gt;maxSigmaBinning" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="float" name="minChange" qname="PreprocessDatasetParameterSet&amp;gt;minChange" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="float" name="minDelta" qname="PreprocessDatasetParameterSet&amp;gt;minDelta" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="int" name="numberOfColumnsAboveThreshold" qname="PreprocessDatasetParameterSet&amp;gt;numberOfColumnsAboveThreshold" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="int" name="numExclude" qname="PreprocessDatasetParameterSet&amp;gt;numExclude" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="preprocessingFlag" qname="PreprocessDatasetParameterSet&amp;gt;preprocessingFlag" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="float" name="probabilityThreshold" qname="PreprocessDatasetParameterSet&amp;gt;probabilityThreshold" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="float" name="threshold" qname="PreprocessDatasetParameterSet&amp;gt;threshold" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>PreprocessDatasetParameterSet</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>output</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="PreprocessDatasetParameterSet" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>PreprocessDatasetParameterSetXML3</name><inputPorts><port><name>preprocessingFlag</name><depth>0</depth></port><port><name>probabilityThreshold</name><depth>0</depth></port><port><name>logBaseTwo</name><depth>0</depth></port><port><name>numberOfColumnsAboveThreshold</name><depth>0</depth></port><port><name>threshold</name><depth>0</depth></port><port><name>numExclude</name><depth>0</depth></port><port><name>maxSigmaBinning</name><depth>0</depth></port><port><name>minChange</name><depth>0</depth></port><port><name>minDelta</name><depth>0</depth></port><port><name>ceiling</name><depth>0</depth></port><port><name>filterFlag</name><depth>0</depth></port><port><name>columnThreshold</name><depth>0</depth></port></inputPorts><outputPorts><port><name>output</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLInputSplitterActivity</class><inputMap><map from="minDelta" to="minDelta" /><map from="filterFlag" to="filterFlag" /><map from="maxSigmaBinning" to="maxSigmaBinning" /><map from="preprocessingFlag" to="preprocessingFlag" /><map from="ceiling" to="ceiling" /><map from="minChange" to="minChange" /><map from="numExclude" to="numExclude" /><map from="logBaseTwo" to="logBaseTwo" /><map from="probabilityThreshold" to="probabilityThreshold" /><map from="threshold" to="threshold" /><map from="columnThreshold" to="columnThreshold" /><map from="numberOfColumnsAboveThreshold" to="numberOfColumnsAboveThreshold" /></inputMap><outputMap><map from="output" to="output" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="PreprocessDatasetParameterSet" name="PreprocessDatasetParameterSet" qname="{gme://GenePattern.caBIG/1/gridExtensions}&amp;gt;&amp;gt;PerformAnalysisRequest&amp;gt;preprocessDatasetParameterSet&amp;gt;PreprocessDatasetParameterSet"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="float" name="ceiling" qname="PreprocessDatasetParameterSet&amp;gt;ceiling" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="float" name="columnThreshold" qname="PreprocessDatasetParameterSet&amp;gt;columnThreshold" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="boolean" name="filterFlag" qname="PreprocessDatasetParameterSet&amp;gt;filterFlag" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="boolean" name="logBaseTwo" qname="PreprocessDatasetParameterSet&amp;gt;logBaseTwo" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="int" name="maxSigmaBinning" qname="PreprocessDatasetParameterSet&amp;gt;maxSigmaBinning" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="float" name="minChange" qname="PreprocessDatasetParameterSet&amp;gt;minChange" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="float" name="minDelta" qname="PreprocessDatasetParameterSet&amp;gt;minDelta" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="int" name="numberOfColumnsAboveThreshold" qname="PreprocessDatasetParameterSet&amp;gt;numberOfColumnsAboveThreshold" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="int" name="numExclude" qname="PreprocessDatasetParameterSet&amp;gt;numExclude" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="preprocessingFlag" qname="PreprocessDatasetParameterSet&amp;gt;preprocessingFlag" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="float" name="probabilityThreshold" qname="PreprocessDatasetParameterSet&amp;gt;probabilityThreshold" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="float" name="threshold" qname="PreprocessDatasetParameterSet&amp;gt;threshold" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>ceiling</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/plain'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>columnThreshold</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/plain'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>filterFlag</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/plain'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>logBaseTwo</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/plain'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>maxSigmaBinning</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/plain'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>minChange</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/plain'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>minDelta</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/plain'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>numberOfColumnsAboveThreshold</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/plain'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>numExclude</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/plain'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>preprocessingFlag</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/plain'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>probabilityThreshold</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/plain'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>threshold</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/plain'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>output</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><dot><port name="preprocessingFlag" depth="0" /><port name="probabilityThreshold" depth="0" /><port name="logBaseTwo" depth="0" /><port name="numberOfColumnsAboveThreshold" depth="0" /><port name="threshold" depth="0" /><port name="numExclude" depth="0" /><port name="maxSigmaBinning" depth="0" /><port name="minChange" depth="0" /><port name="minDelta" depth="0" /><port name="ceiling" depth="0" /><port name="filterFlag" depth="0" /><port name="columnThreshold" depth="0" /></dot></strategy></iteration></iterationStrategyStack></processor><processor><name>parametersXML13</name><inputPorts><port><name>data</name><depth>0</depth></port><port><name>preprocessDatasetParameterSet</name><depth>0</depth></port></inputPorts><outputPorts><port><name>output</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLInputSplitterActivity</class><inputMap><map from="preprocessDatasetParameterSet" to="preprocessDatasetParameterSet" /><map from="data" to="data" /></inputMap><outputMap><map from="output" to="output" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="PerformAnalysisRequest" name="parameters" qname="{http://org.genepattern.cagrid.service/PreprocessDatasetSTATMLService}PerformAnalysisRequest"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="&amp;gt;&amp;gt;PerformAnalysisRequest&amp;gt;data" name="data" qname="{http://org.genepattern.cagrid.service/PreprocessDatasetSTATMLService}&amp;gt;PerformAnalysisRequest&amp;gt;data"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="Data" name="Data" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}&amp;gt;&amp;gt;PerformAnalysisRequest&amp;gt;data&amp;gt;Data"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Scalar" name="scalar" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Data&amp;gt;scalar"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="Scalar" name="" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="name" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar&amp;gt;name" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="type" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar&amp;gt;type" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="value" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar&amp;gt;value" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="List" name="list" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Data&amp;gt;list"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="List" name="" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="name" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;name" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="type" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;type" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="integer" name="length" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;length" /&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Scalar" name="scalar" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;scalar"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar" optional="false" unbounded="false" typename="Scalar" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="List" name="list" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;list"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="List" name="" qname="List"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="name" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;name" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="type" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;type" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="integer" name="length" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;length" /&gt;&lt;s:arraytype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;scalar" optional="true" unbounded="true" wrapped="false" typename="Scalar" name="scalar" /&gt;&lt;s:arraytype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;list" optional="true" unbounded="true" wrapped="false" typename="List" name="list" /&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Null" name="aNull" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;aNull"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="Null" name="" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Null"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Array" name="array" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;array"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="Array" name="" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="dimensions" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array&amp;gt;dimensions" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="name" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array&amp;gt;name" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="type" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array&amp;gt;type" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="base64Value" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array&amp;gt;base64Value" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;aNull" optional="true" unbounded="true" wrapped="false" typename="Null" name="aNull" /&gt;&lt;s:arraytype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;array" optional="true" unbounded="true" wrapped="false" typename="Array" name="array" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Null" name="aNull" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Data&amp;gt;aNull"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Null" optional="false" unbounded="false" typename="Null" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Array" name="array" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Data&amp;gt;array"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array" optional="false" unbounded="false" typename="Array" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="false" unbounded="false" typename="&amp;gt;&amp;gt;PerformAnalysisRequest&amp;gt;preprocessDatasetParameterSet" name="preprocessDatasetParameterSet" qname="{http://org.genepattern.cagrid.service/PreprocessDatasetSTATMLService}&amp;gt;PerformAnalysisRequest&amp;gt;preprocessDatasetParameterSet"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="PreprocessDatasetParameterSet" name="PreprocessDatasetParameterSet" qname="{gme://GenePattern.caBIG/1/gridExtensions}&amp;gt;&amp;gt;PerformAnalysisRequest&amp;gt;preprocessDatasetParameterSet&amp;gt;PreprocessDatasetParameterSet"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="float" name="ceiling" qname="PreprocessDatasetParameterSet&amp;gt;ceiling" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="float" name="columnThreshold" qname="PreprocessDatasetParameterSet&amp;gt;columnThreshold" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="boolean" name="filterFlag" qname="PreprocessDatasetParameterSet&amp;gt;filterFlag" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="boolean" name="logBaseTwo" qname="PreprocessDatasetParameterSet&amp;gt;logBaseTwo" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="int" name="maxSigmaBinning" qname="PreprocessDatasetParameterSet&amp;gt;maxSigmaBinning" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="float" name="minChange" qname="PreprocessDatasetParameterSet&amp;gt;minChange" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="float" name="minDelta" qname="PreprocessDatasetParameterSet&amp;gt;minDelta" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="int" name="numberOfColumnsAboveThreshold" qname="PreprocessDatasetParameterSet&amp;gt;numberOfColumnsAboveThreshold" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="int" name="numExclude" qname="PreprocessDatasetParameterSet&amp;gt;numExclude" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="preprocessingFlag" qname="PreprocessDatasetParameterSet&amp;gt;preprocessingFlag" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="float" name="probabilityThreshold" qname="PreprocessDatasetParameterSet&amp;gt;probabilityThreshold" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="float" name="threshold" qname="PreprocessDatasetParameterSet&amp;gt;threshold" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>data</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>preprocessDatasetParameterSet</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>output</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><dot><port name="data" depth="0" /><port name="preprocessDatasetParameterSet" depth="0" /></dot></strategy></iteration></iterationStrategyStack></processor><processor><name>preProcessTrainingData</name><inputPorts><port><name>parameters</name><depth>0</depth></port></inputPorts><outputPorts><port><name>parameters</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>attachmentList</name><depth>1</depth><granularDepth>1</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.wsdl.WSDLActivity</class><inputMap><map from="parameters" to="parameters" /></inputMap><outputMap><map from="parameters" to="parameters" /><map from="attachmentList" to="attachmentList" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean xmlns="">
  <wsdl>http://node255.broad.mit.edu:6060/wsrf/services/cagrid/PreprocessDatasetSTATMLService?wsdl</wsdl>
  <operation>performAnalysis</operation>
</net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="parameters" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>preProcessTestData</name><inputPorts><port><name>parameters</name><depth>0</depth></port></inputPorts><outputPorts><port><name>parameters</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>attachmentList</name><depth>1</depth><granularDepth>1</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.wsdl.WSDLActivity</class><inputMap><map from="parameters" to="parameters" /></inputMap><outputMap><map from="parameters" to="parameters" /><map from="attachmentList" to="attachmentList" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean xmlns="">
  <wsdl>http://node255.broad.mit.edu:6060/wsrf/services/cagrid/PreprocessDatasetSTATMLService?wsdl</wsdl>
  <operation>performAnalysis</operation>
</net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="parameters" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>parametersXML12</name><inputPorts><port><name>input</name><depth>0</depth></port></inputPorts><outputPorts><port><name>Data</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLOutputSplitterActivity</class><inputMap><map from="input" to="input" /></inputMap><outputMap><map from="Data" to="Data" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="PerformAnalysisResponse" name="parameters" qname="{http://org.genepattern.cagrid.service/PreprocessDatasetSTATMLService}PerformAnalysisResponse"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="Data" name="Data" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}&amp;gt;PerformAnalysisResponse&amp;gt;Data"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Scalar" name="scalar" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Data&amp;gt;scalar"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="Scalar" name="" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="name" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar&amp;gt;name" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="type" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar&amp;gt;type" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="value" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar&amp;gt;value" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="List" name="list" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Data&amp;gt;list"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="List" name="" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="name" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;name" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="type" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;type" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="integer" name="length" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;length" /&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Scalar" name="scalar" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;scalar"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar" optional="false" unbounded="false" typename="Scalar" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="List" name="list" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;list"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="List" name="" qname="List"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="name" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;name" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="type" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;type" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="integer" name="length" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;length" /&gt;&lt;s:arraytype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;scalar" optional="true" unbounded="true" wrapped="false" typename="Scalar" name="scalar" /&gt;&lt;s:arraytype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;list" optional="true" unbounded="true" wrapped="false" typename="List" name="list" /&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Null" name="aNull" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;aNull"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="Null" name="" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Null"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Array" name="array" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;array"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="Array" name="" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="dimensions" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array&amp;gt;dimensions" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="name" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array&amp;gt;name" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="type" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array&amp;gt;type" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="base64Value" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array&amp;gt;base64Value" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;aNull" optional="true" unbounded="true" wrapped="false" typename="Null" name="aNull" /&gt;&lt;s:arraytype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;array" optional="true" unbounded="true" wrapped="false" typename="Array" name="array" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Null" name="aNull" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Data&amp;gt;aNull"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Null" optional="false" unbounded="false" typename="Null" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Array" name="array" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Data&amp;gt;array"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array" optional="false" unbounded="false" typename="Array" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>input</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>Data</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="input" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>parametersXML11</name><inputPorts><port><name>data</name><depth>0</depth></port><port><name>preprocessDatasetParameterSet</name><depth>0</depth></port></inputPorts><outputPorts><port><name>output</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLInputSplitterActivity</class><inputMap><map from="preprocessDatasetParameterSet" to="preprocessDatasetParameterSet" /><map from="data" to="data" /></inputMap><outputMap><map from="output" to="output" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="PerformAnalysisRequest" name="parameters" qname="{http://org.genepattern.cagrid.service/PreprocessDatasetSTATMLService}PerformAnalysisRequest"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="&amp;gt;&amp;gt;PerformAnalysisRequest&amp;gt;data" name="data" qname="{http://org.genepattern.cagrid.service/PreprocessDatasetSTATMLService}&amp;gt;PerformAnalysisRequest&amp;gt;data"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="Data" name="Data" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}&amp;gt;&amp;gt;PerformAnalysisRequest&amp;gt;data&amp;gt;Data"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Scalar" name="scalar" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Data&amp;gt;scalar"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="Scalar" name="" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="name" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar&amp;gt;name" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="type" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar&amp;gt;type" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="value" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar&amp;gt;value" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="List" name="list" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Data&amp;gt;list"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="List" name="" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="name" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;name" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="type" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;type" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="integer" name="length" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;length" /&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Scalar" name="scalar" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;scalar"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar" optional="false" unbounded="false" typename="Scalar" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="List" name="list" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;list"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="List" name="" qname="List"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="name" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;name" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="type" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;type" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="integer" name="length" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;length" /&gt;&lt;s:arraytype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;scalar" optional="true" unbounded="true" wrapped="false" typename="Scalar" name="scalar" /&gt;&lt;s:arraytype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;list" optional="true" unbounded="true" wrapped="false" typename="List" name="list" /&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Null" name="aNull" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;aNull"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="Null" name="" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Null"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Array" name="array" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;array"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="Array" name="" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="dimensions" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array&amp;gt;dimensions" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="name" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array&amp;gt;name" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="type" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array&amp;gt;type" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="base64Value" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array&amp;gt;base64Value" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;aNull" optional="true" unbounded="true" wrapped="false" typename="Null" name="aNull" /&gt;&lt;s:arraytype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;array" optional="true" unbounded="true" wrapped="false" typename="Array" name="array" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Null" name="aNull" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Data&amp;gt;aNull"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Null" optional="false" unbounded="false" typename="Null" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Array" name="array" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Data&amp;gt;array"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array" optional="false" unbounded="false" typename="Array" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="false" unbounded="false" typename="&amp;gt;&amp;gt;PerformAnalysisRequest&amp;gt;preprocessDatasetParameterSet" name="preprocessDatasetParameterSet" qname="{http://org.genepattern.cagrid.service/PreprocessDatasetSTATMLService}&amp;gt;PerformAnalysisRequest&amp;gt;preprocessDatasetParameterSet"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="PreprocessDatasetParameterSet" name="PreprocessDatasetParameterSet" qname="{gme://GenePattern.caBIG/1/gridExtensions}&amp;gt;&amp;gt;PerformAnalysisRequest&amp;gt;preprocessDatasetParameterSet&amp;gt;PreprocessDatasetParameterSet"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="float" name="ceiling" qname="PreprocessDatasetParameterSet&amp;gt;ceiling" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="float" name="columnThreshold" qname="PreprocessDatasetParameterSet&amp;gt;columnThreshold" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="boolean" name="filterFlag" qname="PreprocessDatasetParameterSet&amp;gt;filterFlag" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="boolean" name="logBaseTwo" qname="PreprocessDatasetParameterSet&amp;gt;logBaseTwo" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="int" name="maxSigmaBinning" qname="PreprocessDatasetParameterSet&amp;gt;maxSigmaBinning" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="float" name="minChange" qname="PreprocessDatasetParameterSet&amp;gt;minChange" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="float" name="minDelta" qname="PreprocessDatasetParameterSet&amp;gt;minDelta" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="int" name="numberOfColumnsAboveThreshold" qname="PreprocessDatasetParameterSet&amp;gt;numberOfColumnsAboveThreshold" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="int" name="numExclude" qname="PreprocessDatasetParameterSet&amp;gt;numExclude" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="preprocessingFlag" qname="PreprocessDatasetParameterSet&amp;gt;preprocessingFlag" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="float" name="probabilityThreshold" qname="PreprocessDatasetParameterSet&amp;gt;probabilityThreshold" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="float" name="threshold" qname="PreprocessDatasetParameterSet&amp;gt;threshold" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>data</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>preprocessDatasetParameterSet</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>output</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><dot><port name="data" depth="0" /><port name="preprocessDatasetParameterSet" depth="0" /></dot></strategy></iteration></iterationStrategyStack></processor><processor><name>preprocessDatasetParameterSetXML</name><inputPorts><port><name>PreprocessDatasetParameterSet</name><depth>0</depth></port></inputPorts><outputPorts><port><name>output</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLInputSplitterActivity</class><inputMap><map from="PreprocessDatasetParameterSet" to="PreprocessDatasetParameterSet" /></inputMap><outputMap><map from="output" to="output" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="&amp;gt;&amp;gt;PerformAnalysisRequest&amp;gt;preprocessDatasetParameterSet" name="preprocessDatasetParameterSet" qname="{http://org.genepattern.cagrid.service/PreprocessDatasetSTATMLService}&amp;gt;PerformAnalysisRequest&amp;gt;preprocessDatasetParameterSet"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="PreprocessDatasetParameterSet" name="PreprocessDatasetParameterSet" qname="{gme://GenePattern.caBIG/1/gridExtensions}&amp;gt;&amp;gt;PerformAnalysisRequest&amp;gt;preprocessDatasetParameterSet&amp;gt;PreprocessDatasetParameterSet"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="float" name="ceiling" qname="PreprocessDatasetParameterSet&amp;gt;ceiling" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="float" name="columnThreshold" qname="PreprocessDatasetParameterSet&amp;gt;columnThreshold" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="boolean" name="filterFlag" qname="PreprocessDatasetParameterSet&amp;gt;filterFlag" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="boolean" name="logBaseTwo" qname="PreprocessDatasetParameterSet&amp;gt;logBaseTwo" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="int" name="maxSigmaBinning" qname="PreprocessDatasetParameterSet&amp;gt;maxSigmaBinning" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="float" name="minChange" qname="PreprocessDatasetParameterSet&amp;gt;minChange" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="float" name="minDelta" qname="PreprocessDatasetParameterSet&amp;gt;minDelta" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="int" name="numberOfColumnsAboveThreshold" qname="PreprocessDatasetParameterSet&amp;gt;numberOfColumnsAboveThreshold" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="int" name="numExclude" qname="PreprocessDatasetParameterSet&amp;gt;numExclude" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="preprocessingFlag" qname="PreprocessDatasetParameterSet&amp;gt;preprocessingFlag" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="float" name="probabilityThreshold" qname="PreprocessDatasetParameterSet&amp;gt;probabilityThreshold" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="float" name="threshold" qname="PreprocessDatasetParameterSet&amp;gt;threshold" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>PreprocessDatasetParameterSet</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>output</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="PreprocessDatasetParameterSet" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>parametersXML14</name><inputPorts><port><name>input</name><depth>0</depth></port></inputPorts><outputPorts><port><name>Data</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLOutputSplitterActivity</class><inputMap><map from="input" to="input" /></inputMap><outputMap><map from="Data" to="Data" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="PerformAnalysisResponse" name="parameters" qname="{http://org.genepattern.cagrid.service/PreprocessDatasetSTATMLService}PerformAnalysisResponse"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="Data" name="Data" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}&amp;gt;PerformAnalysisResponse&amp;gt;Data"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Scalar" name="scalar" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Data&amp;gt;scalar"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="Scalar" name="" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="name" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar&amp;gt;name" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="type" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar&amp;gt;type" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="value" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar&amp;gt;value" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="List" name="list" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Data&amp;gt;list"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="List" name="" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="name" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;name" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="type" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;type" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="integer" name="length" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;length" /&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Scalar" name="scalar" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;scalar"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar" optional="false" unbounded="false" typename="Scalar" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="List" name="list" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;list"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="List" name="" qname="List"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="name" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;name" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="type" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;type" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="integer" name="length" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;length" /&gt;&lt;s:arraytype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;scalar" optional="true" unbounded="true" wrapped="false" typename="Scalar" name="scalar" /&gt;&lt;s:arraytype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;list" optional="true" unbounded="true" wrapped="false" typename="List" name="list" /&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Null" name="aNull" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;aNull"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="Null" name="" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Null"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Array" name="array" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;array"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="Array" name="" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="dimensions" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array&amp;gt;dimensions" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="name" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array&amp;gt;name" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="type" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array&amp;gt;type" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="base64Value" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array&amp;gt;base64Value" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;aNull" optional="true" unbounded="true" wrapped="false" typename="Null" name="aNull" /&gt;&lt;s:arraytype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;array" optional="true" unbounded="true" wrapped="false" typename="Array" name="array" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Null" name="aNull" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Data&amp;gt;aNull"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Null" optional="false" unbounded="false" typename="Null" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Array" name="array" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Data&amp;gt;array"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array" optional="false" unbounded="false" typename="Array" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>input</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>Data</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="input" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>ceiling</name><inputPorts /><outputPorts><port><name>value</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>stringconstant-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.stringconstant.StringConstantActivity</class><inputMap /><outputMap><map from="value" to="value" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean xmlns="">
  <value>2.1</value>
</net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross /></strategy></iteration></iterationStrategyStack></processor><processor><name>columnThreshold</name><inputPorts /><outputPorts><port><name>value</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>stringconstant-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.stringconstant.StringConstantActivity</class><inputMap /><outputMap><map from="value" to="value" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean xmlns="">
  <value>0.0</value>
</net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross /></strategy></iteration></iterationStrategyStack></processor><processor><name>filterFlag</name><inputPorts /><outputPorts><port><name>value</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>stringconstant-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.stringconstant.StringConstantActivity</class><inputMap /><outputMap><map from="value" to="value" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean xmlns="">
  <value>false</value>
</net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross /></strategy></iteration></iterationStrategyStack></processor><processor><name>logBaseTwo</name><inputPorts /><outputPorts><port><name>value</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>stringconstant-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.stringconstant.StringConstantActivity</class><inputMap /><outputMap><map from="value" to="value" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean xmlns="">
  <value>false</value>
</net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross /></strategy></iteration></iterationStrategyStack></processor><processor><name>maxSigmaBinning</name><inputPorts /><outputPorts><port><name>value</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>stringconstant-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.stringconstant.StringConstantActivity</class><inputMap /><outputMap><map from="value" to="value" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean xmlns="">
  <value>1</value>
</net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross /></strategy></iteration></iterationStrategyStack></processor><processor><name>minChange</name><inputPorts /><outputPorts><port><name>value</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>stringconstant-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.stringconstant.StringConstantActivity</class><inputMap /><outputMap><map from="value" to="value" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean xmlns="">
  <value>3.0</value>
</net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross /></strategy></iteration></iterationStrategyStack></processor><processor><name>minDelta</name><inputPorts /><outputPorts><port><name>value</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>stringconstant-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.stringconstant.StringConstantActivity</class><inputMap /><outputMap><map from="value" to="value" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean xmlns="">
  <value>100.0</value>
</net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross /></strategy></iteration></iterationStrategyStack></processor><processor><name>numberOfColumnsAboveThreshold</name><inputPorts /><outputPorts><port><name>value</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>stringconstant-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.stringconstant.StringConstantActivity</class><inputMap /><outputMap><map from="value" to="value" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean xmlns="">
  <value>1</value>
</net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross /></strategy></iteration></iterationStrategyStack></processor><processor><name>numExclude</name><inputPorts /><outputPorts><port><name>value</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>stringconstant-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.stringconstant.StringConstantActivity</class><inputMap /><outputMap><map from="value" to="value" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean xmlns="">
  <value>0</value>
</net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross /></strategy></iteration></iterationStrategyStack></processor><processor><name>preprocessingFlag</name><inputPorts /><outputPorts><port><name>value</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>stringconstant-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.stringconstant.StringConstantActivity</class><inputMap /><outputMap><map from="value" to="value" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean xmlns="">
  <value>no-disc-or-norm</value>
</net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross /></strategy></iteration></iterationStrategyStack></processor><processor><name>probabilityThreshold</name><inputPorts /><outputPorts><port><name>value</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>stringconstant-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.stringconstant.StringConstantActivity</class><inputMap /><outputMap><map from="value" to="value" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean xmlns="">
  <value>1.0</value>
</net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross /></strategy></iteration></iterationStrategyStack></processor><processor><name>threshold</name><inputPorts /><outputPorts><port><name>value</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>stringconstant-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.stringconstant.StringConstantActivity</class><inputMap /><outputMap><map from="value" to="value" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean xmlns="">
  <value>20.0</value>
</net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross /></strategy></iteration></iterationStrategyStack></processor></processors><conditions /><datalinks><datalink><sink type="processor"><processor>dataXML</processor><port>Data</port></sink><source type="dataflow"><port>testData</port></source></datalink><datalink><sink type="processor"><processor>PreprocessDatasetParameterSetXML1</processor><port>threshold</port></sink><source type="processor"><processor>threshold</processor><port>value</port></source></datalink><datalink><sink type="processor"><processor>PreprocessDatasetParameterSetXML1</processor><port>numExclude</port></sink><source type="processor"><processor>numExclude</processor><port>value</port></source></datalink><datalink><sink type="processor"><processor>PreprocessDatasetParameterSetXML1</processor><port>preprocessingFlag</port></sink><source type="processor"><processor>preprocessingFlag</processor><port>value</port></source></datalink><datalink><sink type="processor"><processor>PreprocessDatasetParameterSetXML1</processor><port>logBaseTwo</port></sink><source type="processor"><processor>logBaseTwo</processor><port>value</port></source></datalink><datalink><sink type="processor"><processor>PreprocessDatasetParameterSetXML1</processor><port>filterFlag</port></sink><source type="processor"><processor>filterFlag</processor><port>value</port></source></datalink><datalink><sink type="processor"><processor>PreprocessDatasetParameterSetXML1</processor><port>minDelta</port></sink><source type="processor"><processor>minDelta</processor><port>value</port></source></datalink><datalink><sink type="processor"><processor>PreprocessDatasetParameterSetXML1</processor><port>ceiling</port></sink><source type="processor"><processor>ceiling</processor><port>value</port></source></datalink><datalink><sink type="processor"><processor>PreprocessDatasetParameterSetXML1</processor><port>minChange</port></sink><source type="processor"><processor>minChange</processor><port>value</port></source></datalink><datalink><sink type="processor"><processor>PreprocessDatasetParameterSetXML1</processor><port>columnThreshold</port></sink><source type="processor"><processor>columnThreshold</processor><port>value</port></source></datalink><datalink><sink type="processor"><processor>PreprocessDatasetParameterSetXML1</processor><port>maxSigmaBinning</port></sink><source type="processor"><processor>maxSigmaBinning</processor><port>value</port></source></datalink><datalink><sink type="processor"><processor>PreprocessDatasetParameterSetXML1</processor><port>probabilityThreshold</port></sink><source type="processor"><processor>probabilityThreshold</processor><port>value</port></source></datalink><datalink><sink type="processor"><processor>PreprocessDatasetParameterSetXML1</processor><port>numberOfColumnsAboveThreshold</port></sink><source type="processor"><processor>numberOfColumnsAboveThreshold</processor><port>value</port></source></datalink><datalink><sink type="processor"><processor>dataXML1</processor><port>Data</port></sink><source type="dataflow"><port>trainingData</port></source></datalink><datalink><sink type="processor"><processor>preprocessDatasetParameterSetXML2</processor><port>PreprocessDatasetParameterSet</port></sink><source type="processor"><processor>PreprocessDatasetParameterSetXML3</processor><port>output</port></source></datalink><datalink><sink type="processor"><processor>PreprocessDatasetParameterSetXML3</processor><port>preprocessingFlag</port></sink><source type="processor"><processor>preprocessingFlag</processor><port>value</port></source></datalink><datalink><sink type="processor"><processor>PreprocessDatasetParameterSetXML3</processor><port>probabilityThreshold</port></sink><source type="processor"><processor>probabilityThreshold</processor><port>value</port></source></datalink><datalink><sink type="processor"><processor>PreprocessDatasetParameterSetXML3</processor><port>logBaseTwo</port></sink><source type="processor"><processor>logBaseTwo</processor><port>value</port></source></datalink><datalink><sink type="processor"><processor>PreprocessDatasetParameterSetXML3</processor><port>numberOfColumnsAboveThreshold</port></sink><source type="processor"><processor>numberOfColumnsAboveThreshold</processor><port>value</port></source></datalink><datalink><sink type="processor"><processor>PreprocessDatasetParameterSetXML3</processor><port>threshold</port></sink><source type="processor"><processor>threshold</processor><port>value</port></source></datalink><datalink><sink type="processor"><processor>PreprocessDatasetParameterSetXML3</processor><port>numExclude</port></sink><source type="processor"><processor>numExclude</processor><port>value</port></source></datalink><datalink><sink type="processor"><processor>PreprocessDatasetParameterSetXML3</processor><port>maxSigmaBinning</port></sink><source type="processor"><processor>maxSigmaBinning</processor><port>value</port></source></datalink><datalink><sink type="processor"><processor>PreprocessDatasetParameterSetXML3</processor><port>minChange</port></sink><source type="processor"><processor>minChange</processor><port>value</port></source></datalink><datalink><sink type="processor"><processor>PreprocessDatasetParameterSetXML3</processor><port>minDelta</port></sink><source type="processor"><processor>minDelta</processor><port>value</port></source></datalink><datalink><sink type="processor"><processor>PreprocessDatasetParameterSetXML3</processor><port>ceiling</port></sink><source type="processor"><processor>ceiling</processor><port>value</port></source></datalink><datalink><sink type="processor"><processor>PreprocessDatasetParameterSetXML3</processor><port>filterFlag</port></sink><source type="processor"><processor>filterFlag</processor><port>value</port></source></datalink><datalink><sink type="processor"><processor>PreprocessDatasetParameterSetXML3</processor><port>columnThreshold</port></sink><source type="processor"><processor>columnThreshold</processor><port>value</port></source></datalink><datalink><sink type="processor"><processor>parametersXML13</processor><port>data</port></sink><source type="processor"><processor>dataXML1</processor><port>output</port></source></datalink><datalink><sink type="processor"><processor>parametersXML13</processor><port>preprocessDatasetParameterSet</port></sink><source type="processor"><processor>preprocessDatasetParameterSetXML2</processor><port>output</port></source></datalink><datalink><sink type="processor"><processor>preProcessTrainingData</processor><port>parameters</port></sink><source type="processor"><processor>parametersXML13</processor><port>output</port></source></datalink><datalink><sink type="processor"><processor>preProcessTestData</processor><port>parameters</port></sink><source type="processor"><processor>parametersXML11</processor><port>output</port></source></datalink><datalink><sink type="processor"><processor>parametersXML12</processor><port>input</port></sink><source type="processor"><processor>preProcessTestData</processor><port>parameters</port></source></datalink><datalink><sink type="processor"><processor>parametersXML11</processor><port>data</port></sink><source type="processor"><processor>dataXML</processor><port>output</port></source></datalink><datalink><sink type="processor"><processor>parametersXML11</processor><port>preprocessDatasetParameterSet</port></sink><source type="processor"><processor>preprocessDatasetParameterSetXML</processor><port>output</port></source></datalink><datalink><sink type="processor"><processor>preprocessDatasetParameterSetXML</processor><port>PreprocessDatasetParameterSet</port></sink><source type="processor"><processor>PreprocessDatasetParameterSetXML1</processor><port>output</port></source></datalink><datalink><sink type="processor"><processor>parametersXML14</processor><port>input</port></sink><source type="processor"><processor>preProcessTrainingData</processor><port>parameters</port></source></datalink><datalink><sink type="dataflow"><port>trainingData</port></sink><source type="processor"><processor>parametersXML14</processor><port>Data</port></source></datalink><datalink><sink type="dataflow"><port>testData</port></sink><source type="processor"><processor>parametersXML12</processor><port>Data</port></source></datalink></datalinks><annotations /></dataflow><dataflow id="079f19aa-786b-4059-9665-f83fbadee52e" role="nested"><name>caArray</name><inputPorts><port><name>testData</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>testClass</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>trainingClass</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>trainingData</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port></inputPorts><outputPorts><port><name>SVM_Result</name></port><port><name>KNN_Result</name></port><port><name>Result_CSV</name></port></outputPorts><processors><processor><name>parametersXML10</name><inputPorts><port><name>trainingData</name><depth>0</depth></port><port><name>testData</name><depth>0</depth></port><port><name>trainingClass</name><depth>0</depth></port><port><name>testClass</name><depth>0</depth></port></inputPorts><outputPorts><port><name>output</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLInputSplitterActivity</class><inputMap><map from="trainingClass" to="trainingClass" /><map from="trainingData" to="trainingData" /><map from="testClass" to="testClass" /><map from="testData" to="testData" /></inputMap><outputMap><map from="output" to="output" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="PerformAnalysisRequest" name="parameters" qname="{http://svm.genepattern.org/SVM}PerformAnalysisRequest"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="&amp;gt;&amp;gt;PerformAnalysisRequest&amp;gt;trainingClass" name="trainingClass" qname="{http://svm.genepattern.org/SVM}&amp;gt;PerformAnalysisRequest&amp;gt;trainingClass"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="ClassMembership" name="ClassMembership" qname="{gme://GenePattern.caBIG/1/gridExtensions}&amp;gt;&amp;gt;PerformAnalysisRequest&amp;gt;trainingClass&amp;gt;ClassMembership"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="false" unbounded="true" wrapped="false" typename="string" name="classNames" qname="ClassMembership&amp;gt;classNames"&gt;&lt;s:elementtype&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="" qname="{http://www.w3.org/2001/XMLSchema}string" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:basetype optional="false" unbounded="false" typename="int" name="numSamples" qname="ClassMembership&amp;gt;numSamples" /&gt;&lt;s:arraytype optional="false" unbounded="true" wrapped="false" typename="int" name="sampleClasses" qname="ClassMembership&amp;gt;sampleClasses"&gt;&lt;s:elementtype&gt;&lt;s:basetype optional="false" unbounded="false" typename="int" name="" qname="{http://www.w3.org/2001/XMLSchema}int" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="false" unbounded="true" wrapped="false" typename="string" name="sampleNames" qname="ClassMembership&amp;gt;sampleNames"&gt;&lt;s:elementtype&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="" qname="{http://www.w3.org/2001/XMLSchema}string" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="false" unbounded="false" typename="&amp;gt;&amp;gt;PerformAnalysisRequest&amp;gt;testClass" name="testClass" qname="{http://svm.genepattern.org/SVM}&amp;gt;PerformAnalysisRequest&amp;gt;testClass"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="ClassMembership" name="ClassMembership" qname="{gme://GenePattern.caBIG/1/gridExtensions}&amp;gt;&amp;gt;PerformAnalysisRequest&amp;gt;testClass&amp;gt;ClassMembership"&gt;&lt;s:elements&gt;&lt;s:arraytype id="ClassMembership&amp;gt;classNames" optional="false" unbounded="true" wrapped="false" typename="string" name="classNames" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="int" name="numSamples" qname="ClassMembership&amp;gt;numSamples" /&gt;&lt;s:arraytype id="ClassMembership&amp;gt;sampleClasses" optional="false" unbounded="true" wrapped="false" typename="int" name="sampleClasses" /&gt;&lt;s:arraytype id="ClassMembership&amp;gt;sampleNames" optional="false" unbounded="true" wrapped="false" typename="string" name="sampleNames" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="false" unbounded="false" typename="&amp;gt;&amp;gt;PerformAnalysisRequest&amp;gt;trainingData" name="trainingData" qname="{http://svm.genepattern.org/SVM}&amp;gt;PerformAnalysisRequest&amp;gt;trainingData"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="Data" name="Data" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}&amp;gt;&amp;gt;PerformAnalysisRequest&amp;gt;trainingData&amp;gt;Data"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Scalar" name="scalar" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Data&amp;gt;scalar"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="Scalar" name="" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="name" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar&amp;gt;name" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="type" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar&amp;gt;type" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="value" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar&amp;gt;value" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="List" name="list" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Data&amp;gt;list"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="List" name="" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="name" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;name" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="type" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;type" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="integer" name="length" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;length" /&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Scalar" name="scalar" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;scalar"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar" optional="false" unbounded="false" typename="Scalar" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="List" name="list" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;list"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="List" name="" qname="List"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="name" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;name" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="type" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;type" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="integer" name="length" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;length" /&gt;&lt;s:arraytype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;scalar" optional="true" unbounded="true" wrapped="false" typename="Scalar" name="scalar" /&gt;&lt;s:arraytype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;list" optional="true" unbounded="true" wrapped="false" typename="List" name="list" /&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Null" name="aNull" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;aNull"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="Null" name="" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Null"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Array" name="array" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;array"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="Array" name="" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="dimensions" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array&amp;gt;dimensions" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="name" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array&amp;gt;name" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="type" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array&amp;gt;type" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="base64Value" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array&amp;gt;base64Value" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;aNull" optional="true" unbounded="true" wrapped="false" typename="Null" name="aNull" /&gt;&lt;s:arraytype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;array" optional="true" unbounded="true" wrapped="false" typename="Array" name="array" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Null" name="aNull" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Data&amp;gt;aNull"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Null" optional="false" unbounded="false" typename="Null" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Array" name="array" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Data&amp;gt;array"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array" optional="false" unbounded="false" typename="Array" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="false" unbounded="false" typename="&amp;gt;&amp;gt;PerformAnalysisRequest&amp;gt;testData" name="testData" qname="{http://svm.genepattern.org/SVM}&amp;gt;PerformAnalysisRequest&amp;gt;testData"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="Data" name="Data" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}&amp;gt;&amp;gt;PerformAnalysisRequest&amp;gt;testData&amp;gt;Data"&gt;&lt;s:elements&gt;&lt;s:arraytype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Data&amp;gt;scalar" optional="true" unbounded="true" wrapped="false" typename="Scalar" name="scalar" /&gt;&lt;s:arraytype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Data&amp;gt;list" optional="true" unbounded="true" wrapped="false" typename="List" name="list" /&gt;&lt;s:arraytype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Data&amp;gt;aNull" optional="true" unbounded="true" wrapped="false" typename="Null" name="aNull" /&gt;&lt;s:arraytype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Data&amp;gt;array" optional="true" unbounded="true" wrapped="false" typename="Array" name="array" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>trainingClass</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>testClass</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>trainingData</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>testData</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>output</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><dot><port name="trainingClass" depth="0" /><port name="testClass" depth="0" /><port name="trainingData" depth="0" /><port name="testData" depth="0" /></dot></strategy></iteration></iterationStrategyStack></processor><processor><name>trainingDataXML</name><inputPorts><port><name>Data</name><depth>0</depth></port></inputPorts><outputPorts><port><name>output</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLInputSplitterActivity</class><inputMap><map from="Data" to="Data" /></inputMap><outputMap><map from="output" to="output" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="&amp;gt;&amp;gt;PerformAnalysisRequest&amp;gt;trainingData" name="trainingData" qname="{http://svm.genepattern.org/SVM}&amp;gt;PerformAnalysisRequest&amp;gt;trainingData"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="Data" name="Data" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}&amp;gt;&amp;gt;PerformAnalysisRequest&amp;gt;trainingData&amp;gt;Data"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Scalar" name="scalar" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Data&amp;gt;scalar"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="Scalar" name="" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="name" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar&amp;gt;name" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="type" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar&amp;gt;type" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="value" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar&amp;gt;value" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="List" name="list" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Data&amp;gt;list"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="List" name="" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="name" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;name" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="type" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;type" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="integer" name="length" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;length" /&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Scalar" name="scalar" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;scalar"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar" optional="false" unbounded="false" typename="Scalar" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="List" name="list" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;list"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="List" name="" qname="List"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="name" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;name" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="type" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;type" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="integer" name="length" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;length" /&gt;&lt;s:arraytype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;scalar" optional="true" unbounded="true" wrapped="false" typename="Scalar" name="scalar" /&gt;&lt;s:arraytype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;list" optional="true" unbounded="true" wrapped="false" typename="List" name="list" /&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Null" name="aNull" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;aNull"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="Null" name="" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Null"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Array" name="array" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;array"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="Array" name="" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="dimensions" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array&amp;gt;dimensions" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="name" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array&amp;gt;name" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="type" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array&amp;gt;type" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="base64Value" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array&amp;gt;base64Value" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;aNull" optional="true" unbounded="true" wrapped="false" typename="Null" name="aNull" /&gt;&lt;s:arraytype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;array" optional="true" unbounded="true" wrapped="false" typename="Array" name="array" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Null" name="aNull" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Data&amp;gt;aNull"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Null" optional="false" unbounded="false" typename="Null" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Array" name="array" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Data&amp;gt;array"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array" optional="false" unbounded="false" typename="Array" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>Data</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>output</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="Data" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>testClassXML</name><inputPorts><port><name>ClassMembership</name><depth>0</depth></port></inputPorts><outputPorts><port><name>output</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLInputSplitterActivity</class><inputMap><map from="ClassMembership" to="ClassMembership" /></inputMap><outputMap><map from="output" to="output" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="&amp;gt;&amp;gt;PerformAnalysisRequest&amp;gt;testClass" name="testClass" qname="{http://svm.genepattern.org/SVM}&amp;gt;PerformAnalysisRequest&amp;gt;testClass"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="ClassMembership" name="ClassMembership" qname="{gme://GenePattern.caBIG/1/gridExtensions}&amp;gt;&amp;gt;PerformAnalysisRequest&amp;gt;testClass&amp;gt;ClassMembership"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="false" unbounded="true" wrapped="false" typename="string" name="classNames" qname="ClassMembership&amp;gt;classNames"&gt;&lt;s:elementtype&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="" qname="{http://www.w3.org/2001/XMLSchema}string" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:basetype optional="false" unbounded="false" typename="int" name="numSamples" qname="ClassMembership&amp;gt;numSamples" /&gt;&lt;s:arraytype optional="false" unbounded="true" wrapped="false" typename="int" name="sampleClasses" qname="ClassMembership&amp;gt;sampleClasses"&gt;&lt;s:elementtype&gt;&lt;s:basetype optional="false" unbounded="false" typename="int" name="" qname="{http://www.w3.org/2001/XMLSchema}int" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="false" unbounded="true" wrapped="false" typename="string" name="sampleNames" qname="ClassMembership&amp;gt;sampleNames"&gt;&lt;s:elementtype&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="" qname="{http://www.w3.org/2001/XMLSchema}string" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>ClassMembership</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>output</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="ClassMembership" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>PerformeSVM</name><inputPorts><port><name>parameters</name><depth>0</depth></port></inputPorts><outputPorts><port><name>parameters</name><depth>0</depth><granularDepth>0</granularDepth></port><port><name>attachmentList</name><depth>1</depth><granularDepth>1</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.wsdl.WSDLActivity</class><inputMap><map from="parameters" to="parameters" /></inputMap><outputMap><map from="parameters" to="parameters" /><map from="attachmentList" to="attachmentList" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean xmlns="">
  <wsdl>http://node255.broad.mit.edu:6060/wsrf/services/cagrid/SVM?wsdl</wsdl>
  <operation>performAnalysis</operation>
</net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="parameters" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>testDataXML</name><inputPorts><port><name>Data</name><depth>0</depth></port></inputPorts><outputPorts><port><name>output</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLInputSplitterActivity</class><inputMap><map from="Data" to="Data" /></inputMap><outputMap><map from="output" to="output" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="&amp;gt;&amp;gt;PerformAnalysisRequest&amp;gt;testData" name="testData" qname="{http://svm.genepattern.org/SVM}&amp;gt;PerformAnalysisRequest&amp;gt;testData"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="Data" name="Data" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}&amp;gt;&amp;gt;PerformAnalysisRequest&amp;gt;testData&amp;gt;Data"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Scalar" name="scalar" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Data&amp;gt;scalar"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="Scalar" name="" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="name" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar&amp;gt;name" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="type" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar&amp;gt;type" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="value" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar&amp;gt;value" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="List" name="list" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Data&amp;gt;list"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="List" name="" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="name" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;name" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="type" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;type" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="integer" name="length" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;length" /&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Scalar" name="scalar" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;scalar"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar" optional="false" unbounded="false" typename="Scalar" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="List" name="list" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;list"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="List" name="" qname="List"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="name" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;name" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="type" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;type" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="integer" name="length" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;length" /&gt;&lt;s:arraytype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;scalar" optional="true" unbounded="true" wrapped="false" typename="Scalar" name="scalar" /&gt;&lt;s:arraytype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;list" optional="true" unbounded="true" wrapped="false" typename="List" name="list" /&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Null" name="aNull" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;aNull"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="Null" name="" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Null"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Array" name="array" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;array"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="Array" name="" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="dimensions" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array&amp;gt;dimensions" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="name" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array&amp;gt;name" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="type" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array&amp;gt;type" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="base64Value" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array&amp;gt;base64Value" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;aNull" optional="true" unbounded="true" wrapped="false" typename="Null" name="aNull" /&gt;&lt;s:arraytype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;array" optional="true" unbounded="true" wrapped="false" typename="Array" name="array" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Null" name="aNull" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Data&amp;gt;aNull"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Null" optional="false" unbounded="false" typename="Null" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Array" name="array" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Data&amp;gt;array"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array" optional="false" unbounded="false" typename="Array" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>Data</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>output</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="Data" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>trainingClassXML</name><inputPorts><port><name>ClassMembership</name><depth>0</depth></port></inputPorts><outputPorts><port><name>output</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLInputSplitterActivity</class><inputMap><map from="ClassMembership" to="ClassMembership" /></inputMap><outputMap><map from="output" to="output" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="&amp;gt;&amp;gt;PerformAnalysisRequest&amp;gt;trainingClass" name="trainingClass" qname="{http://svm.genepattern.org/SVM}&amp;gt;PerformAnalysisRequest&amp;gt;trainingClass"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="ClassMembership" name="ClassMembership" qname="{gme://GenePattern.caBIG/1/gridExtensions}&amp;gt;&amp;gt;PerformAnalysisRequest&amp;gt;trainingClass&amp;gt;ClassMembership"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="false" unbounded="true" wrapped="false" typename="string" name="classNames" qname="ClassMembership&amp;gt;classNames"&gt;&lt;s:elementtype&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="" qname="{http://www.w3.org/2001/XMLSchema}string" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:basetype optional="false" unbounded="false" typename="int" name="numSamples" qname="ClassMembership&amp;gt;numSamples" /&gt;&lt;s:arraytype optional="false" unbounded="true" wrapped="false" typename="int" name="sampleClasses" qname="ClassMembership&amp;gt;sampleClasses"&gt;&lt;s:elementtype&gt;&lt;s:basetype optional="false" unbounded="false" typename="int" name="" qname="{http://www.w3.org/2001/XMLSchema}int" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="false" unbounded="true" wrapped="false" typename="string" name="sampleNames" qname="ClassMembership&amp;gt;sampleNames"&gt;&lt;s:elementtype&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="" qname="{http://www.w3.org/2001/XMLSchema}string" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>ClassMembership</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>output</name>
      <depth>0</depth>
      <mimeTypes>
        <string>'text/xml'</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>0</initialDelay>
  <maxDelay>0</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="ClassMembership" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>PerformeKNN</name><inputPorts><port><name>parameters</name><depth>0</depth></port></inputPorts><outputPorts><port><name>parameters</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.wsdl.WSDLActivity</class><inputMap><map from="parameters" to="parameters" /></inputMap><outputMap><map from="parameters" to="parameters" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean xmlns="">
  <wsdl>http://node255.broad.mit.edu:6060/wsrf/services/cagrid/KNN?wsdl</wsdl>
  <operation>performAnalysis</operation>
</net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="parameters" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>performAnalysis2_input</name><inputPorts><port><name>testClass</name><depth>0</depth></port><port><name>trainingClass</name><depth>0</depth></port><port><name>parameterList</name><depth>0</depth></port><port><name>trainingData</name><depth>0</depth></port><port><name>testData</name><depth>0</depth></port></inputPorts><outputPorts><port><name>output</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLInputSplitterActivity</class><inputMap><map from="parameterList" to="parameterList" /><map from="trainingClass" to="trainingClass" /><map from="trainingData" to="trainingData" /><map from="testClass" to="testClass" /><map from="testData" to="testData" /></inputMap><outputMap><map from="output" to="output" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">
  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="PerformAnalysisRequest" name="parameters" qname="{http://knn.genepattern.org/KNN}PerformAnalysisRequest"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="&amp;gt;&amp;gt;PerformAnalysisRequest&amp;gt;trainingClass" name="trainingClass" qname="{http://knn.genepattern.org/KNN}&amp;gt;PerformAnalysisRequest&amp;gt;trainingClass"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="ClassMembership" name="ClassMembership" qname="{gme://GenePattern.caBIG/1/gridExtensions}&amp;gt;&amp;gt;PerformAnalysisRequest&amp;gt;trainingClass&amp;gt;ClassMembership"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="false" unbounded="true" wrapped="false" typename="string" name="classNames" qname="ClassMembership&amp;gt;classNames"&gt;&lt;s:elementtype&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="" qname="{http://www.w3.org/2001/XMLSchema}string" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:basetype optional="false" unbounded="false" typename="int" name="numSamples" qname="ClassMembership&amp;gt;numSamples" /&gt;&lt;s:arraytype optional="false" unbounded="true" wrapped="false" typename="int" name="sampleClasses" qname="ClassMembership&amp;gt;sampleClasses"&gt;&lt;s:elementtype&gt;&lt;s:basetype optional="false" unbounded="false" typename="int" name="" qname="{http://www.w3.org/2001/XMLSchema}int" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="false" unbounded="true" wrapped="false" typename="string" name="sampleNames" qname="ClassMembership&amp;gt;sampleNames"&gt;&lt;s:elementtype&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="" qname="{http://www.w3.org/2001/XMLSchema}string" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="false" unbounded="false" typename="&amp;gt;&amp;gt;PerformAnalysisRequest&amp;gt;testClass" name="testClass" qname="{http://knn.genepattern.org/KNN}&amp;gt;PerformAnalysisRequest&amp;gt;testClass"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="ClassMembership" name="ClassMembership" qname="{gme://GenePattern.caBIG/1/gridExtensions}&amp;gt;&amp;gt;PerformAnalysisRequest&amp;gt;testClass&amp;gt;ClassMembership"&gt;&lt;s:elements&gt;&lt;s:arraytype id="ClassMembership&amp;gt;classNames" optional="false" unbounded="true" wrapped="false" typename="string" name="classNames" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="int" name="numSamples" qname="ClassMembership&amp;gt;numSamples" /&gt;&lt;s:arraytype id="ClassMembership&amp;gt;sampleClasses" optional="false" unbounded="true" wrapped="false" typename="int" name="sampleClasses" /&gt;&lt;s:arraytype id="ClassMembership&amp;gt;sampleNames" optional="false" unbounded="true" wrapped="false" typename="string" name="sampleNames" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="false" unbounded="false" typename="&amp;gt;&amp;gt;PerformAnalysisRequest&amp;gt;trainingData" name="trainingData" qname="{http://knn.genepattern.org/KNN}&amp;gt;PerformAnalysisRequest&amp;gt;trainingData"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="Data" name="Data" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}&amp;gt;&amp;gt;PerformAnalysisRequest&amp;gt;trainingData&amp;gt;Data"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Scalar" name="scalar" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Data&amp;gt;scalar"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="Scalar" name="" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="name" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar&amp;gt;name" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="type" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar&amp;gt;type" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="value" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar&amp;gt;value" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="List" name="list" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Data&amp;gt;list"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="List" name="" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="name" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;name" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="type" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;type" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="integer" name="length" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;length" /&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Scalar" name="scalar" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;scalar"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Scalar" optional="false" unbounded="false" typename="Scalar" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="List" name="list" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;list"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="List" name="" qname="List"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="name" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;name" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="type" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;type" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="integer" name="length" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;length" /&gt;&lt;s:arraytype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;scalar" optional="true" unbounded="true" wrapped="false" typename="Scalar" name="scalar" /&gt;&lt;s:arraytype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;list" optional="true" unbounded="true" wrapped="false" typename="List" name="list" /&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Null" name="aNull" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;aNull"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="Null" name="" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Null"&gt;&lt;s:elements /&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Array" name="array" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;array"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="Array" name="" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="dimensions" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array&amp;gt;dimensions" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="name" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array&amp;gt;name" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="type" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array&amp;gt;type" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="base64Value" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array&amp;gt;base64Value" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;aNull" optional="true" unbounded="true" wrapped="false" typename="Null" name="aNull" /&gt;&lt;s:arraytype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}List&amp;gt;array" optional="true" unbounded="true" wrapped="false" typename="Array" name="array" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Null" name="aNull" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Data&amp;gt;aNull"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Null" optional="false" unbounded="false" typename="Null" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Array" name="array" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Data&amp;gt;array"&gt;&lt;s:elementtype&gt;&lt;s:complextype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Array" optional="false" unbounded="false" typename="Array" name="" /&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="false" unbounded="false" typename="&amp;gt;&amp;gt;PerformAnalysisRequest&amp;gt;testData" name="testData" qname="{http://knn.genepattern.org/KNN}&amp;gt;PerformAnalysisRequest&amp;gt;testData"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="Data" name="Data" qname="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}&amp;gt;&amp;gt;PerformAnalysisRequest&amp;gt;testData&amp;gt;Data"&gt;&lt;s:elements&gt;&lt;s:arraytype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Data&amp;gt;scalar" optional="true" unbounded="true" wrapped="false" typename="Scalar" name="scalar" /&gt;&lt;s:arraytype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Data&amp;gt;list" optional="true" unbounded="true" wrapped="false" typename="List" name="list" /&gt;&lt;s:arraytype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Data&amp;gt;aNull" optional="true" unbounded="true" wrapped="false" typename="Null" name="aNull" /&gt;&lt;s:arraytype id="{gme://RProteomics.caBIG/2.0/edu.duke.cabig.rproteomics.model.statml}Data&amp;gt;array" optional="true" unbounded="true" wrapped="false" typename="Array" name="array" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;s:complextype optional="false" unbounded="false" typename="&amp;gt;&amp;gt;PerformAnalysisRequest&amp;gt;parameterList" name="parameterList" qname="{http://knn.genepattern.org/KNN}&amp;gt;PerformAnalysisRequest&amp;gt;parameterList"&gt;&lt;s:elements&gt;&lt;s:complextype optional="false" unbounded="false" typename="ParameterList" name="ParameterList" qname="{gme://parameter.asbp/1/org.cabig.icr.asbp.parameter}&amp;gt;&amp;gt;PerformAnalysisRequest&amp;gt;parameterList&amp;gt;ParameterList"&gt;&lt;s:elements&gt;&lt;s:arraytype optional="true" unbounded="true" wrapped="false" typename="Parameter" name="parameterCollection" qname="ParameterList&amp;gt;parameterCollection"&gt;&lt;s:elementtype&gt;&lt;s:complextype optional="false" unbounded="false" typename="Parameter" name="" qname="{gme://parameter.asbp/1/org.cabig.icr.asbp.parameter}Parameter"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="name" qname="Parameter&amp;gt;name" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elementtype&gt;&lt;/s:arraytype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML>
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <allowsLiteralValues>false</allowsLiteralValues>
      <name>trainingClass</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/xml'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <allowsLiteralValues>false</allowsLiteralValues>
      <name>testClass</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/xml'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <allowsLiteralValues>false</allowsLiteralValues>
      <name>trainingData</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/xml'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <allowsLiteralValues>false</allowsLiteralValues>
      <name>testData</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/xml'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <allowsLiteralValues>false</allowsLiteralValues>
      <name>parameterList</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/xml'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>output</name>
      <depth>0</depth>
      <mimeTypes class="java.util.Collections$SingletonList">
        <element class="string">'text/xml'</element>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><dot><port name="testClass" depth="0" /><port name="trainingClass" depth="0" /><port name="parameterList" depth="0" /><port name="trainingData" depth="0" /><port name="testData" depth="0" /></dot></strategy></iteration></iterationStrategyStack></processor><processor><name>String_constant</name><inputPorts /><outputPorts><port><name>value</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>stringconstant-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.stringconstant.StringConstantActivity</class><inputMap /><outputMap><map from="value" to="value" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean xmlns="">
  <value>&lt;parameterList xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://knn.genepattern.org/KNN"&gt;&lt;ns5:ParameterList xmlns:ns5="gme://parameter.asbp/1/org.cabig.icr.asbp.parameter"&gt;&lt;parameterCollection xsi:type="ns5:IntegerParameter" xmlns=""&gt;&lt;name&gt;num.features&lt;/name&gt;&lt;value&gt;10&lt;/value&gt;&lt;/parameterCollection&gt;&lt;parameterCollection xsi:type="ns5:StringParameter" xmlns=""&gt;&lt;name&gt;feature.selection.statistic&lt;/name&gt;&lt;value&gt;T-test&lt;/value&gt;&lt;/parameterCollection&gt;&lt;parameterCollection xsi:type="ns5:FloatParameter" xmlns=""&gt;&lt;name&gt;min.std&lt;/name&gt;&lt;value&gt;0.0&lt;/value&gt;&lt;/parameterCollection&gt;&lt;parameterCollection xsi:type="ns5:IntegerParameter" xmlns=""&gt;&lt;name&gt;num.neighbors&lt;/name&gt;&lt;value&gt;3&lt;/value&gt;&lt;/parameterCollection&gt;&lt;parameterCollection xsi:type="ns5:StringParameter" xmlns=""&gt;&lt;name&gt;weighting.type&lt;/name&gt;&lt;value&gt;distance&lt;/value&gt;&lt;/parameterCollection&gt;&lt;parameterCollection xsi:type="ns5:StringParameter" xmlns=""&gt;&lt;name&gt;distance.measure&lt;/name&gt;&lt;value&gt;Cosine Distance&lt;/value&gt;&lt;/parameterCollection&gt;&lt;/ns5:ParameterList&gt;&lt;/parameterList&gt;</value>
</net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy /></iteration></iterationStrategyStack></processor><processor><name>Result_CSV</name><inputPorts><port><name>in1</name><depth>0</depth></port><port><name>in0</name><depth>0</depth></port></inputPorts><outputPorts><port><name>out0</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>beanshell-activity</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity</class><inputMap><map from="in0" to="in0" /><map from="in1" to="in1" /></inputMap><outputMap><map from="out0" to="out0" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean xmlns="">
  <script>import java.io.File;
import java.io.StringReader;
import java.io.StringWriter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathConstants;
import javax.xml.xpath.XPathFactory;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;
import org.xml.sax.InputSource;

	// parse the output file to get a string
		DocumentBuilderFactory docBuilderFactory = DocumentBuilderFactory.newInstance();
		docBuilderFactory.setNamespaceAware(true);
        DocumentBuilder docBuilder;
		try {
			
			
			//----------------------------------------------------------
			docBuilder = docBuilderFactory.newDocumentBuilder();
			
			    
			    
			  //----------------------------------------------------------
			    
			Document doc0 = docBuilder.parse( new InputSource(new StringReader(in0)));
			Document doc1 = docBuilder.parse( new InputSource(new StringReader(in1)));
			Element svmElement = doc0.getDocumentElement();   
			Element knnElement = doc1.getDocumentElement();   
			XPath xpath1 = XPathFactory.newInstance().newXPath();
			String sampleName = 
				"//*[local-name()='sampleName' and namespace-uri()='']/text()";
			String svmClass = 
				"//*[local-name()='predictedClass' and namespace-uri()='']/text()";
			String trueClass = 
				"//*[local-name()='trueClass' and namespace-uri()='']/text()";
			String knnClass = 
				"//*[local-name()='predictedClass' and namespace-uri()='']/text()";
			NodeList  sampleNameNodes = (NodeList) xpath1.evaluate(sampleName, svmElement, XPathConstants.NODESET);
			NodeList  svmClassNodes = (NodeList) xpath1.evaluate(svmClass, svmElement, XPathConstants.NODESET);
			NodeList  trueClassNodes = (NodeList) xpath1.evaluate(trueClass, svmElement, XPathConstants.NODESET);
			NodeList  knnClassNodes = (NodeList) xpath1.evaluate(knnClass, knnElement, XPathConstants.NODESET);
			StringBuffer scvSB = new StringBuffer();
			String   newline   =   System.getProperty("line.separator");     
			scvSB.append(newline+ "SampleName\tTrueClass\tSVMPrediction\tKNNPrediction" + newline);
			
			for (int i=0;i&lt;sampleNameNodes.getLength();i++){	
				scvSB.append(sampleNameNodes.item(i).getTextContent()+"\t"+trueClassNodes.item(i).getTextContent()+"\t"+svmClassNodes.item(i).getTextContent()+"\t"+knnClassNodes.item(i).getTextContent()+ newline);
			}	
		out0 = scvSB.toString();	
		System.out.println(out0);
		}
		 catch(Exception ex)
		    {
		       ex.printStackTrace();
		       
		    }</script>
  <dependencies />
  <classLoaderSharing>workflow</classLoaderSharing>
  <localDependencies />
  <artifactDependencies />
  <inputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>in0</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
      <handledReferenceSchemes />
      <translatedElementType>java.lang.String</translatedElementType>
      <allowsLiteralValues>true</allowsLiteralValues>
      <name>in1</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
  </inputs>
  <outputs>
    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
      <granularDepth>0</granularDepth>
      <name>out0</name>
      <depth>0</depth>
      <mimeTypes>
        <string>text/plain</string>
      </mimeTypes>
    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
  </outputs>
</net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
  <maxJobs>1</maxJobs>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
  <backoffFactor>1.0</backoffFactor>
  <initialDelay>1000</initialDelay>
  <maxDelay>5000</maxDelay>
  <maxRetries>0</maxRetries>
</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>0.8</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="in1" depth="0" /><port name="in0" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor></processors><conditions /><datalinks><datalink><sink type="processor"><processor>parametersXML10</processor><port>trainingData</port></sink><source type="processor"><processor>trainingDataXML</processor><port>output</port></source></datalink><datalink><sink type="processor"><processor>parametersXML10</processor><port>testData</port></sink><source type="processor"><processor>testDataXML</processor><port>output</port></source></datalink><datalink><sink type="processor"><processor>parametersXML10</processor><port>trainingClass</port></sink><source type="processor"><processor>trainingClassXML</processor><port>output</port></source></datalink><datalink><sink type="processor"><processor>parametersXML10</processor><port>testClass</port></sink><source type="processor"><processor>testClassXML</processor><port>output</port></source></datalink><datalink><sink type="processor"><processor>trainingDataXML</processor><port>Data</port></sink><source type="dataflow"><port>trainingData</port></source></datalink><datalink><sink type="processor"><processor>testClassXML</processor><port>ClassMembership</port></sink><source type="dataflow"><port>testClass</port></source></datalink><datalink><sink type="processor"><processor>PerformeSVM</processor><port>parameters</port></sink><source type="processor"><processor>parametersXML10</processor><port>output</port></source></datalink><datalink><sink type="processor"><processor>testDataXML</processor><port>Data</port></sink><source type="dataflow"><port>testData</port></source></datalink><datalink><sink type="processor"><processor>trainingClassXML</processor><port>ClassMembership</port></sink><source type="dataflow"><port>trainingClass</port></source></datalink><datalink><sink type="processor"><processor>PerformeKNN</processor><port>parameters</port></sink><source type="processor"><processor>performAnalysis2_input</processor><port>output</port></source></datalink><datalink><sink type="processor"><processor>performAnalysis2_input</processor><port>testClass</port></sink><source type="processor"><processor>testClassXML</processor><port>output</port></source></datalink><datalink><sink type="processor"><processor>performAnalysis2_input</processor><port>trainingClass</port></sink><source type="processor"><processor>trainingClassXML</processor><port>output</port></source></datalink><datalink><sink type="processor"><processor>performAnalysis2_input</processor><port>parameterList</port></sink><source type="processor"><processor>String_constant</processor><port>value</port></source></datalink><datalink><sink type="processor"><processor>performAnalysis2_input</processor><port>trainingData</port></sink><source type="processor"><processor>trainingDataXML</processor><port>output</port></source></datalink><datalink><sink type="processor"><processor>performAnalysis2_input</processor><port>testData</port></sink><source type="processor"><processor>testDataXML</processor><port>output</port></source></datalink><datalink><sink type="processor"><processor>Result_CSV</processor><port>in1</port></sink><source type="processor"><processor>PerformeKNN</processor><port>parameters</port></source></datalink><datalink><sink type="processor"><processor>Result_CSV</processor><port>in0</port></sink><source type="processor"><processor>PerformeSVM</processor><port>parameters</port></source></datalink><datalink><sink type="dataflow"><port>SVM_Result</port></sink><source type="processor"><processor>PerformeSVM</processor><port>parameters</port></source></datalink><datalink><sink type="dataflow"><port>KNN_Result</port></sink><source type="processor"><processor>PerformeKNN</processor><port>parameters</port></source></datalink><datalink><sink type="dataflow"><port>Result_CSV</port></sink><source type="processor"><processor>Result_CSV</processor><port>out0</port></source></datalink></datalinks><annotations /></dataflow></workflow>